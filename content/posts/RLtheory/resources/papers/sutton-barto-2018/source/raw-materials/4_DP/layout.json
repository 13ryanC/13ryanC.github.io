{
    "pdf_info": [
        {
            "para_blocks": [
                {
                    "bbox": [
                        105,
                        215,
                        220,
                        240
                    ],
                    "type": "title",
                    "lines": [
                        {
                            "bbox": [
                                105,
                                215,
                                220,
                                240
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        105,
                                        215,
                                        220,
                                        240
                                    ],
                                    "type": "text",
                                    "content": "Chapter 4"
                                }
                            ]
                        }
                    ],
                    "index": 0,
                    "level": 1
                },
                {
                    "bbox": [
                        104,
                        268,
                        422,
                        298
                    ],
                    "type": "title",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                268,
                                422,
                                298
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        268,
                                        422,
                                        298
                                    ],
                                    "type": "text",
                                    "content": "Dynamic Programming"
                                }
                            ]
                        }
                    ],
                    "index": 1,
                    "level": 1
                },
                {
                    "bbox": [
                        104,
                        313,
                        530,
                        420
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                313,
                                530,
                                420
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        313,
                                        530,
                                        420
                                    ],
                                    "type": "text",
                                    "content": "The term dynamic programming (DP) refers to a collection of algorithms that can be used to compute optimal policies given a perfect model of the environment as a Markov decision process (MDP). Classical DP algorithms are of limited utility in reinforcement learning both because of their assumption of a perfect model and because of their great computational expense, but they are still important theoretically. DP provides an essential foundation for the understanding of the methods presented in the rest of this book. In fact, all of these methods can be viewed as attempts to achieve much the same effect as DP, only with less computation and without assuming a perfect model of the environment."
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        104,
                        421,
                        530,
                        540
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                421,
                                530,
                                540
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        421,
                                        530,
                                        540
                                    ],
                                    "type": "text",
                                    "content": "Starting with this chapter, we usually assume that the environment is a finite MDP. That is, we assume that its state, action, and reward sets, "
                                },
                                {
                                    "bbox": [
                                        104,
                                        421,
                                        530,
                                        540
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathcal{S}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        421,
                                        530,
                                        540
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathcal{A}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        421,
                                        530,
                                        540
                                    ],
                                    "type": "text",
                                    "content": " , and "
                                },
                                {
                                    "bbox": [
                                        104,
                                        421,
                                        530,
                                        540
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathcal{R}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        421,
                                        530,
                                        540
                                    ],
                                    "type": "text",
                                    "content": " , are finite, and that its dynamics are given by a set of probabilities "
                                },
                                {
                                    "bbox": [
                                        104,
                                        421,
                                        530,
                                        540
                                    ],
                                    "type": "inline_equation",
                                    "content": "p(s^{\\prime},r|s,a)"
                                },
                                {
                                    "bbox": [
                                        104,
                                        421,
                                        530,
                                        540
                                    ],
                                    "type": "text",
                                    "content": " , for all "
                                },
                                {
                                    "bbox": [
                                        104,
                                        421,
                                        530,
                                        540
                                    ],
                                    "type": "inline_equation",
                                    "content": "s\\in \\mathcal{S}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        421,
                                        530,
                                        540
                                    ],
                                    "type": "inline_equation",
                                    "content": "a\\in \\mathcal{A}(s)"
                                },
                                {
                                    "bbox": [
                                        104,
                                        421,
                                        530,
                                        540
                                    ],
                                    "type": "inline_equation",
                                    "content": "r\\in \\mathcal{R}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        421,
                                        530,
                                        540
                                    ],
                                    "type": "text",
                                    "content": " , and "
                                },
                                {
                                    "bbox": [
                                        104,
                                        421,
                                        530,
                                        540
                                    ],
                                    "type": "inline_equation",
                                    "content": "s^{\\prime}\\in \\mathcal{S}^{+}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        421,
                                        530,
                                        540
                                    ],
                                    "type": "text",
                                    "content": " - "
                                },
                                {
                                    "bbox": [
                                        104,
                                        421,
                                        530,
                                        540
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathcal{S}^{+}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        421,
                                        530,
                                        540
                                    ],
                                    "type": "text",
                                    "content": " is S plus a terminal state if the problem is episodic). Although DP ideas can be applied to problems with continuous state and action spaces, exact solutions are possible only in special cases. A common way of obtaining approximate solutions for tasks with continuous states and actions is to quantize the state and action spaces and then apply finite- state DP methods. The methods we explore in Part II are applicable to continuous problems and are a significant extension of that approach."
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        104,
                        541,
                        530,
                        607
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                541,
                                530,
                                607
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        541,
                                        530,
                                        607
                                    ],
                                    "type": "text",
                                    "content": "The key idea of DP, and of reinforcement learning generally, is the use of value functions to organize and structure the search for good policies. In this chapter we show how DP can be used to compute the value functions defined in Chapter 3. As discussed there, we can easily obtain optimal policies once we have found the optimal value functions, "
                                },
                                {
                                    "bbox": [
                                        104,
                                        541,
                                        530,
                                        607
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{*}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        541,
                                        530,
                                        607
                                    ],
                                    "type": "text",
                                    "content": " or "
                                },
                                {
                                    "bbox": [
                                        104,
                                        541,
                                        530,
                                        607
                                    ],
                                    "type": "inline_equation",
                                    "content": "q_{*}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        541,
                                        530,
                                        607
                                    ],
                                    "type": "text",
                                    "content": " , which satisfy the Bellman optimality equations:"
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        130,
                        612,
                        528,
                        666
                    ],
                    "type": "interline_equation",
                    "lines": [
                        {
                            "bbox": [
                                130,
                                612,
                                528,
                                666
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        130,
                                        612,
                                        528,
                                        666
                                    ],
                                    "type": "interline_equation",
                                    "content": "\\begin{array}{l}{{v_{*}(s)=\\max _{t}\\mathbb{E}[R_{t+1}+\\gamma v_{*}(S_{t+1})\\mid S_{t}=s,A_{t}=a]}}\\\\ {{\\mathrm{~}=\\max _{a}\\sum_{s^{\\prime},r}p(s^{\\prime},r\\mid s,a)\\Big[r+\\gamma v_{*}(s^{\\prime})\\Big],}}\\end{array} \\tag{4.1}",
                                    "image_path": "932fde636d5f3866a78d55dab2b58e3b20c669b0e6ea32f066ecfb253bc4fb25.jpg"
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        104,
                        669,
                        116,
                        678
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                669,
                                116,
                                678
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        669,
                                        116,
                                        678
                                    ],
                                    "type": "text",
                                    "content": "or"
                                }
                            ]
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        130,
                        681,
                        528,
                        738
                    ],
                    "type": "interline_equation",
                    "lines": [
                        {
                            "bbox": [
                                130,
                                681,
                                528,
                                738
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        130,
                                        681,
                                        528,
                                        738
                                    ],
                                    "type": "interline_equation",
                                    "content": "\\begin{array}{l}{{q_{*}(s,a)=\\mathbb{E}\\Big[R_{t+1}+\\gamma\\max _{a^{\\prime}}q_{*}(S_{t+1},a^{\\prime})\\Big|S_{t}=s,A_{t}=a\\Big]}}\\\\ {{=\\sum_{s^{\\prime},r}p(s^{\\prime},r\\mid s,a)\\Big[r+\\gamma\\max _{a^{\\prime}}q_{*}(s^{\\prime},a^{\\prime})\\Big],}}\\end{array} \\tag{4.2}",
                                    "image_path": "63ca72c8a5389ab179429cc860525d379d16fc013b3a5767b91c12daddd72375.jpg"
                                }
                            ]
                        }
                    ],
                    "index": 7
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                595,
                842
            ],
            "page_idx": 0
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        64,
                        140,
                        490,
                        181
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                140,
                                490,
                                181
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        140,
                                        490,
                                        181
                                    ],
                                    "type": "text",
                                    "content": "for all "
                                },
                                {
                                    "bbox": [
                                        64,
                                        140,
                                        490,
                                        181
                                    ],
                                    "type": "inline_equation",
                                    "content": "s \\in \\mathcal{S}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        140,
                                        490,
                                        181
                                    ],
                                    "type": "text",
                                    "content": ", "
                                },
                                {
                                    "bbox": [
                                        64,
                                        140,
                                        490,
                                        181
                                    ],
                                    "type": "inline_equation",
                                    "content": "a \\in \\mathcal{A}(s)"
                                },
                                {
                                    "bbox": [
                                        64,
                                        140,
                                        490,
                                        181
                                    ],
                                    "type": "text",
                                    "content": ", and "
                                },
                                {
                                    "bbox": [
                                        64,
                                        140,
                                        490,
                                        181
                                    ],
                                    "type": "inline_equation",
                                    "content": "s' \\in \\mathcal{S}^+"
                                },
                                {
                                    "bbox": [
                                        64,
                                        140,
                                        490,
                                        181
                                    ],
                                    "type": "text",
                                    "content": ". As we shall see, DP algorithms are obtained by turning Bellman equations such as these into assignments, that is, into update rules for improving approximations of the desired value functions."
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        64,
                        200,
                        345,
                        219
                    ],
                    "type": "title",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                200,
                                345,
                                219
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        200,
                                        345,
                                        219
                                    ],
                                    "type": "text",
                                    "content": "4.1 Policy Evaluation (Prediction)"
                                }
                            ]
                        }
                    ],
                    "index": 1,
                    "level": 1
                },
                {
                    "bbox": [
                        64,
                        229,
                        490,
                        270
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                229,
                                490,
                                270
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        229,
                                        490,
                                        270
                                    ],
                                    "type": "text",
                                    "content": "First we consider how to compute the state- value function "
                                },
                                {
                                    "bbox": [
                                        64,
                                        229,
                                        490,
                                        270
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        229,
                                        490,
                                        270
                                    ],
                                    "type": "text",
                                    "content": " for an arbitrary policy "
                                },
                                {
                                    "bbox": [
                                        64,
                                        229,
                                        490,
                                        270
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi"
                                },
                                {
                                    "bbox": [
                                        64,
                                        229,
                                        490,
                                        270
                                    ],
                                    "type": "text",
                                    "content": ". This is called policy evaluation in the DP literature. We also refer to it as the prediction problem. Recall from Chapter 3 that, for all "
                                },
                                {
                                    "bbox": [
                                        64,
                                        229,
                                        490,
                                        270
                                    ],
                                    "type": "inline_equation",
                                    "content": "s \\in \\mathcal{S}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        229,
                                        490,
                                        270
                                    ],
                                    "type": "text",
                                    "content": ","
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        91,
                        277,
                        489,
                        362
                    ],
                    "type": "interline_equation",
                    "lines": [
                        {
                            "bbox": [
                                91,
                                277,
                                489,
                                362
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        91,
                                        277,
                                        489,
                                        362
                                    ],
                                    "type": "interline_equation",
                                    "content": "\\begin{array}{r l} & {v_{\\pi}(s)\\doteq \\mathbb{E}_{\\pi}[G_{t}\\mid S_{t} = s]}\\\\ & {\\qquad = \\mathbb{E}_{\\pi}[R_{t + 1} + \\gamma G_{t + 1}\\mid S_{t} = s]}\\\\ & {\\qquad = \\mathbb{E}_{\\pi}[R_{t + 1} + \\gamma v_{\\pi}(S_{t + 1})\\mid S_{t} = s]}\\\\ & {\\qquad = \\sum_{a}\\pi (a|s)\\sum_{s',r}p(s',r|s,a)\\Big[r + \\gamma v_{\\pi}(s')\\Big],} \\end{array} \\tag{4.3}",
                                    "image_path": "4f3d437f4ff891fdaef4ab8c4e7b41dc76069da5cfcfc99503b41cc0dfda0d4e.jpg"
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        430,
                        296,
                        488,
                        310
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                430,
                                296,
                                488,
                                310
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        430,
                                        296,
                                        488,
                                        310
                                    ],
                                    "type": "text",
                                    "content": "(from (3.9))"
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        64,
                        369,
                        490,
                        422
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                369,
                                490,
                                422
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        369,
                                        490,
                                        422
                                    ],
                                    "type": "text",
                                    "content": "where "
                                },
                                {
                                    "bbox": [
                                        64,
                                        369,
                                        490,
                                        422
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi (a|s)"
                                },
                                {
                                    "bbox": [
                                        64,
                                        369,
                                        490,
                                        422
                                    ],
                                    "type": "text",
                                    "content": " is the probability of taking action "
                                },
                                {
                                    "bbox": [
                                        64,
                                        369,
                                        490,
                                        422
                                    ],
                                    "type": "inline_equation",
                                    "content": "a"
                                },
                                {
                                    "bbox": [
                                        64,
                                        369,
                                        490,
                                        422
                                    ],
                                    "type": "text",
                                    "content": " in state "
                                },
                                {
                                    "bbox": [
                                        64,
                                        369,
                                        490,
                                        422
                                    ],
                                    "type": "inline_equation",
                                    "content": "s"
                                },
                                {
                                    "bbox": [
                                        64,
                                        369,
                                        490,
                                        422
                                    ],
                                    "type": "text",
                                    "content": " under policy "
                                },
                                {
                                    "bbox": [
                                        64,
                                        369,
                                        490,
                                        422
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi"
                                },
                                {
                                    "bbox": [
                                        64,
                                        369,
                                        490,
                                        422
                                    ],
                                    "type": "text",
                                    "content": " , and the expectations are subscripted by "
                                },
                                {
                                    "bbox": [
                                        64,
                                        369,
                                        490,
                                        422
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi"
                                },
                                {
                                    "bbox": [
                                        64,
                                        369,
                                        490,
                                        422
                                    ],
                                    "type": "text",
                                    "content": " to indicate that they are conditional on "
                                },
                                {
                                    "bbox": [
                                        64,
                                        369,
                                        490,
                                        422
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi"
                                },
                                {
                                    "bbox": [
                                        64,
                                        369,
                                        490,
                                        422
                                    ],
                                    "type": "text",
                                    "content": " being followed. The existence and uniqueness of "
                                },
                                {
                                    "bbox": [
                                        64,
                                        369,
                                        490,
                                        422
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        369,
                                        490,
                                        422
                                    ],
                                    "type": "text",
                                    "content": " are guaranteed as long as either "
                                },
                                {
                                    "bbox": [
                                        64,
                                        369,
                                        490,
                                        422
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\gamma < 1"
                                },
                                {
                                    "bbox": [
                                        64,
                                        369,
                                        490,
                                        422
                                    ],
                                    "type": "text",
                                    "content": " or eventual termination is guaranteed from all states under the policy "
                                },
                                {
                                    "bbox": [
                                        64,
                                        369,
                                        490,
                                        422
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi"
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        64,
                        424,
                        490,
                        530
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                424,
                                490,
                                530
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        424,
                                        490,
                                        530
                                    ],
                                    "type": "text",
                                    "content": "If the environment's dynamics are completely known, then (4.4) is a system of "
                                },
                                {
                                    "bbox": [
                                        64,
                                        424,
                                        490,
                                        530
                                    ],
                                    "type": "inline_equation",
                                    "content": "|\\mathcal{S}|"
                                },
                                {
                                    "bbox": [
                                        64,
                                        424,
                                        490,
                                        530
                                    ],
                                    "type": "text",
                                    "content": " simultaneous linear equations in "
                                },
                                {
                                    "bbox": [
                                        64,
                                        424,
                                        490,
                                        530
                                    ],
                                    "type": "inline_equation",
                                    "content": "|\\mathcal{S}|"
                                },
                                {
                                    "bbox": [
                                        64,
                                        424,
                                        490,
                                        530
                                    ],
                                    "type": "text",
                                    "content": " unknowns (the "
                                },
                                {
                                    "bbox": [
                                        64,
                                        424,
                                        490,
                                        530
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi}(s)"
                                },
                                {
                                    "bbox": [
                                        64,
                                        424,
                                        490,
                                        530
                                    ],
                                    "type": "text",
                                    "content": ", "
                                },
                                {
                                    "bbox": [
                                        64,
                                        424,
                                        490,
                                        530
                                    ],
                                    "type": "inline_equation",
                                    "content": "s \\in \\mathcal{S}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        424,
                                        490,
                                        530
                                    ],
                                    "type": "text",
                                    "content": "). In principle, its solution is a straightforward, if tedious, computation. For our purposes, iterative solution methods are most suitable. Consider a sequence of approximate value functions "
                                },
                                {
                                    "bbox": [
                                        64,
                                        424,
                                        490,
                                        530
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{0}, v_{1}, v_{2}, \\ldots"
                                },
                                {
                                    "bbox": [
                                        64,
                                        424,
                                        490,
                                        530
                                    ],
                                    "type": "text",
                                    "content": ", each mapping "
                                },
                                {
                                    "bbox": [
                                        64,
                                        424,
                                        490,
                                        530
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathcal{S}^+"
                                },
                                {
                                    "bbox": [
                                        64,
                                        424,
                                        490,
                                        530
                                    ],
                                    "type": "text",
                                    "content": " to "
                                },
                                {
                                    "bbox": [
                                        64,
                                        424,
                                        490,
                                        530
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathbb{R}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        424,
                                        490,
                                        530
                                    ],
                                    "type": "text",
                                    "content": " (the real numbers). The initial approximation, "
                                },
                                {
                                    "bbox": [
                                        64,
                                        424,
                                        490,
                                        530
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{0}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        424,
                                        490,
                                        530
                                    ],
                                    "type": "text",
                                    "content": ", is chosen arbitrarily (except that the terminal state, if any, must be given value 0), and each successive approximation is obtained by using the Bellman equation for "
                                },
                                {
                                    "bbox": [
                                        64,
                                        424,
                                        490,
                                        530
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        424,
                                        490,
                                        530
                                    ],
                                    "type": "text",
                                    "content": " (4.4) as an update rule:"
                                }
                            ]
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        91,
                        537,
                        489,
                        585
                    ],
                    "type": "interline_equation",
                    "lines": [
                        {
                            "bbox": [
                                91,
                                537,
                                489,
                                585
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        91,
                                        537,
                                        489,
                                        585
                                    ],
                                    "type": "interline_equation",
                                    "content": "\\begin{array}{r c l}{{v_{k+1}(s)}}&{{\\doteq}}&{{\\mathbb{E}_{\\pi}[R_{t+1}+\\gamma v_{k}(S_{t+1})\\mid S_{t}=s]}}\\\\ {{}}&{{=}}&{{\\sum_{a}\\pi(a|s)\\sum_{s,r}p(s^{\\prime},r|s,a)\\Big[r+\\gamma v_{k}(s^{\\prime})\\Big],}}\\end{array} \\tag{4.5}",
                                    "image_path": "01ef0b6d83f21d4c66bc03d37db040321ea3e13a61558d9567636879b5575707.jpg"
                                }
                            ]
                        }
                    ],
                    "index": 7
                },
                {
                    "bbox": [
                        64,
                        592,
                        490,
                        646
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                592,
                                490,
                                646
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        592,
                                        490,
                                        646
                                    ],
                                    "type": "text",
                                    "content": "for all "
                                },
                                {
                                    "bbox": [
                                        64,
                                        592,
                                        490,
                                        646
                                    ],
                                    "type": "inline_equation",
                                    "content": "s\\in \\mathcal{S}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        592,
                                        490,
                                        646
                                    ],
                                    "type": "text",
                                    "content": " . Clearly, "
                                },
                                {
                                    "bbox": [
                                        64,
                                        592,
                                        490,
                                        646
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{k} = v_{\\pi}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        592,
                                        490,
                                        646
                                    ],
                                    "type": "text",
                                    "content": " is a fixed point for this update rule because the Bellman equation for "
                                },
                                {
                                    "bbox": [
                                        64,
                                        592,
                                        490,
                                        646
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        592,
                                        490,
                                        646
                                    ],
                                    "type": "text",
                                    "content": " assures us of equality in this case. Indeed, the sequence "
                                },
                                {
                                    "bbox": [
                                        64,
                                        592,
                                        490,
                                        646
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\{v_{k}\\}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        592,
                                        490,
                                        646
                                    ],
                                    "type": "text",
                                    "content": " can be shown in general to converge to "
                                },
                                {
                                    "bbox": [
                                        64,
                                        592,
                                        490,
                                        646
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        592,
                                        490,
                                        646
                                    ],
                                    "type": "text",
                                    "content": " as "
                                },
                                {
                                    "bbox": [
                                        64,
                                        592,
                                        490,
                                        646
                                    ],
                                    "type": "inline_equation",
                                    "content": "k\\rightarrow \\infty"
                                },
                                {
                                    "bbox": [
                                        64,
                                        592,
                                        490,
                                        646
                                    ],
                                    "type": "text",
                                    "content": " under the same conditions that guarantee the existence of "
                                },
                                {
                                    "bbox": [
                                        64,
                                        592,
                                        490,
                                        646
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        592,
                                        490,
                                        646
                                    ],
                                    "type": "text",
                                    "content": " . This algorithm is called iterative policy evaluation."
                                }
                            ]
                        }
                    ],
                    "index": 8
                },
                {
                    "bbox": [
                        64,
                        648,
                        490,
                        728
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                648,
                                490,
                                728
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        648,
                                        490,
                                        728
                                    ],
                                    "type": "text",
                                    "content": "To produce each successive approximation, "
                                },
                                {
                                    "bbox": [
                                        64,
                                        648,
                                        490,
                                        728
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{k + 1}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        648,
                                        490,
                                        728
                                    ],
                                    "type": "text",
                                    "content": " from "
                                },
                                {
                                    "bbox": [
                                        64,
                                        648,
                                        490,
                                        728
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{k}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        648,
                                        490,
                                        728
                                    ],
                                    "type": "text",
                                    "content": " , iterative policy evaluation applies the same operation to each state "
                                },
                                {
                                    "bbox": [
                                        64,
                                        648,
                                        490,
                                        728
                                    ],
                                    "type": "inline_equation",
                                    "content": "s"
                                },
                                {
                                    "bbox": [
                                        64,
                                        648,
                                        490,
                                        728
                                    ],
                                    "type": "text",
                                    "content": " : it replaces the old value of "
                                },
                                {
                                    "bbox": [
                                        64,
                                        648,
                                        490,
                                        728
                                    ],
                                    "type": "inline_equation",
                                    "content": "s"
                                },
                                {
                                    "bbox": [
                                        64,
                                        648,
                                        490,
                                        728
                                    ],
                                    "type": "text",
                                    "content": " with a new value obtained from the old values of the successor states of "
                                },
                                {
                                    "bbox": [
                                        64,
                                        648,
                                        490,
                                        728
                                    ],
                                    "type": "inline_equation",
                                    "content": "s"
                                },
                                {
                                    "bbox": [
                                        64,
                                        648,
                                        490,
                                        728
                                    ],
                                    "type": "text",
                                    "content": " , and the expected immediate rewards, along all the one- step transitions possible under the policy being evaluated. We call this kind of operation an expected update. Each iteration of iterative policy evaluation updates the value of every state once to produce the new approximate value function"
                                }
                            ]
                        }
                    ],
                    "index": 9
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                595,
                842
            ],
            "page_idx": 1
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        104,
                        140,
                        529,
                        247
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                140,
                                529,
                                247
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        140,
                                        529,
                                        247
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{k + 1}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        140,
                                        529,
                                        247
                                    ],
                                    "type": "text",
                                    "content": ". There are several different kinds of expected updates, depending on whether a state (as here) or a state- action pair is being updated, and depending on the precise way the estimated values of the successor states are combined. All the updates done in DP algorithms are called expected updates because they are based on an expectation over all possible next states rather than on a sample next state. The nature of an update can be expressed in an equation, as above, or in a backup diagram like those introduced in Chapter 3. For example, the backup diagram corresponding to the expected update used in iterative policy evaluation is shown on page 59."
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        104,
                        248,
                        530,
                        421
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                248,
                                530,
                                421
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        248,
                                        530,
                                        421
                                    ],
                                    "type": "text",
                                    "content": "To write a sequential computer program to implement iterative policy evaluation as given by (4.5) you would have to use two arrays, one for the old values, "
                                },
                                {
                                    "bbox": [
                                        104,
                                        248,
                                        530,
                                        421
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{k}(s)"
                                },
                                {
                                    "bbox": [
                                        104,
                                        248,
                                        530,
                                        421
                                    ],
                                    "type": "text",
                                    "content": ", and one for the new values, "
                                },
                                {
                                    "bbox": [
                                        104,
                                        248,
                                        530,
                                        421
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{k + 1}(s)"
                                },
                                {
                                    "bbox": [
                                        104,
                                        248,
                                        530,
                                        421
                                    ],
                                    "type": "text",
                                    "content": ". With two arrays, the new values can be computed one by one from the old values without the old values being changed. Alternatively, you could use one array and update the values \"in place,\" that is, with each new value immediately overwriting the old one. Then, depending on the order in which the states are updated, sometimes new values are used instead of old ones on the right- hand side of (4.5). This in- place algorithm also converges to "
                                },
                                {
                                    "bbox": [
                                        104,
                                        248,
                                        530,
                                        421
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        248,
                                        530,
                                        421
                                    ],
                                    "type": "text",
                                    "content": "; in fact, it usually converges faster than the two- array version, as you might expect, because it uses new data as soon as they are available. We think of the updates as being done in a sweep through the state space. For the in- place algorithm, the order in which states have their values updated during the sweep has a significant influence on the rate of convergence. We usually have the in- place version in mind when we think of DP algorithms."
                                }
                            ]
                        }
                    ],
                    "index": 1
                },
                {
                    "bbox": [
                        104,
                        421,
                        529,
                        488
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                421,
                                529,
                                488
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        421,
                                        529,
                                        488
                                    ],
                                    "type": "text",
                                    "content": "A complete in- place version of iterative policy evaluation is shown in pseudocode in the box below. Note how it handles termination. Formally, iterative policy evaluation converges only in the limit, but in practice it must be halted short of this. The pseudocode tests the quantity "
                                },
                                {
                                    "bbox": [
                                        104,
                                        421,
                                        529,
                                        488
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\max_{s \\in \\mathbb{S}} |v_{k + 1}(s) - v_{k}(s)|"
                                },
                                {
                                    "bbox": [
                                        104,
                                        421,
                                        529,
                                        488
                                    ],
                                    "type": "text",
                                    "content": " after each sweep and stops when it is sufficiently small."
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        117,
                        513,
                        394,
                        527
                    ],
                    "type": "title",
                    "lines": [
                        {
                            "bbox": [
                                117,
                                513,
                                394,
                                527
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        117,
                                        513,
                                        394,
                                        527
                                    ],
                                    "type": "text",
                                    "content": "Iterative Policy Evaluation, for estimating "
                                },
                                {
                                    "bbox": [
                                        117,
                                        513,
                                        394,
                                        527
                                    ],
                                    "type": "inline_equation",
                                    "content": "V \\approx v_{\\pi}"
                                }
                            ]
                        }
                    ],
                    "index": 3,
                    "level": 1
                },
                {
                    "bbox": [
                        117,
                        536,
                        290,
                        548
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                117,
                                536,
                                290,
                                548
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        117,
                                        536,
                                        290,
                                        548
                                    ],
                                    "type": "text",
                                    "content": "Input "
                                },
                                {
                                    "bbox": [
                                        117,
                                        536,
                                        290,
                                        548
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi"
                                },
                                {
                                    "bbox": [
                                        117,
                                        536,
                                        290,
                                        548
                                    ],
                                    "type": "text",
                                    "content": ", the policy to be evaluated"
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        117,
                        549,
                        517,
                        576
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                117,
                                549,
                                517,
                                576
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        117,
                                        549,
                                        517,
                                        576
                                    ],
                                    "type": "text",
                                    "content": "Algorithm parameter: a small threshold "
                                },
                                {
                                    "bbox": [
                                        117,
                                        549,
                                        517,
                                        576
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\theta > 0"
                                },
                                {
                                    "bbox": [
                                        117,
                                        549,
                                        517,
                                        576
                                    ],
                                    "type": "text",
                                    "content": " determining accuracy of estimation Initialize "
                                },
                                {
                                    "bbox": [
                                        117,
                                        549,
                                        517,
                                        576
                                    ],
                                    "type": "inline_equation",
                                    "content": "V(s)"
                                },
                                {
                                    "bbox": [
                                        117,
                                        549,
                                        517,
                                        576
                                    ],
                                    "type": "text",
                                    "content": " arbitrarily, for "
                                },
                                {
                                    "bbox": [
                                        117,
                                        549,
                                        517,
                                        576
                                    ],
                                    "type": "inline_equation",
                                    "content": "s \\in \\mathbb{S}"
                                },
                                {
                                    "bbox": [
                                        117,
                                        549,
                                        517,
                                        576
                                    ],
                                    "type": "text",
                                    "content": ", and "
                                },
                                {
                                    "bbox": [
                                        117,
                                        549,
                                        517,
                                        576
                                    ],
                                    "type": "inline_equation",
                                    "content": "V(\\text{terminal})"
                                },
                                {
                                    "bbox": [
                                        117,
                                        549,
                                        517,
                                        576
                                    ],
                                    "type": "text",
                                    "content": " to 0"
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        117,
                        584,
                        147,
                        595
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                117,
                                584,
                                147,
                                595
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        117,
                                        584,
                                        147,
                                        595
                                    ],
                                    "type": "text",
                                    "content": "Loop:"
                                }
                            ]
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        132,
                        596,
                        166,
                        607
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                132,
                                596,
                                166,
                                607
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        132,
                                        596,
                                        166,
                                        607
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\Delta \\leftarrow 0"
                                }
                            ]
                        }
                    ],
                    "index": 7
                },
                {
                    "bbox": [
                        132,
                        610,
                        230,
                        622
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                132,
                                610,
                                230,
                                622
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        132,
                                        610,
                                        230,
                                        622
                                    ],
                                    "type": "text",
                                    "content": "Loop for each "
                                },
                                {
                                    "bbox": [
                                        132,
                                        610,
                                        230,
                                        622
                                    ],
                                    "type": "inline_equation",
                                    "content": "s \\in \\mathbb{S}"
                                },
                                {
                                    "bbox": [
                                        132,
                                        610,
                                        230,
                                        622
                                    ],
                                    "type": "text",
                                    "content": ":"
                                }
                            ]
                        }
                    ],
                    "index": 8
                },
                {
                    "bbox": [
                        150,
                        623,
                        383,
                        665
                    ],
                    "type": "interline_equation",
                    "lines": [
                        {
                            "bbox": [
                                150,
                                623,
                                383,
                                665
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        150,
                                        623,
                                        383,
                                        665
                                    ],
                                    "type": "interline_equation",
                                    "content": "\\begin{array}{r l} & {v\\leftarrow V(s)}\\\\ & {V(s)\\leftarrow \\sum_{a}\\pi (a|s)\\sum_{s^{\\prime},r}p(s^{\\prime},r|s,a)\\left[r + \\gamma V(s^{\\prime})\\right]}\\\\ & {\\Delta \\leftarrow \\max (\\Delta ,|v - V(s)|)} \\end{array}",
                                    "image_path": "c623b11c80c5f1e076d954b643678d946d34eabf80caaf4eec619e9a73d94d51.jpg"
                                }
                            ]
                        }
                    ],
                    "index": 9
                },
                {
                    "bbox": [
                        117,
                        664,
                        176,
                        676
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                117,
                                664,
                                176,
                                676
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        117,
                                        664,
                                        176,
                                        676
                                    ],
                                    "type": "text",
                                    "content": "until "
                                },
                                {
                                    "bbox": [
                                        117,
                                        664,
                                        176,
                                        676
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\Delta < \\theta"
                                }
                            ]
                        }
                    ],
                    "index": 10
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                595,
                842
            ],
            "page_idx": 2
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        64,
                        140,
                        345,
                        154
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                140,
                                345,
                                154
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        140,
                                        345,
                                        154
                                    ],
                                    "type": "text",
                                    "content": "Example 4.1 Consider the "
                                },
                                {
                                    "bbox": [
                                        64,
                                        140,
                                        345,
                                        154
                                    ],
                                    "type": "inline_equation",
                                    "content": "4 \\times 4"
                                },
                                {
                                    "bbox": [
                                        64,
                                        140,
                                        345,
                                        154
                                    ],
                                    "type": "text",
                                    "content": " gridworld shown below."
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "type": "image",
                    "bbox": [
                        133,
                        169,
                        309,
                        264
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                133,
                                169,
                                309,
                                264
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        133,
                                        169,
                                        309,
                                        264
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                133,
                                                169,
                                                309,
                                                264
                                            ],
                                            "type": "image",
                                            "image_path": "037d3a1e633cb0cfce339afeb547216931897f367e0cb818b4a120c9db4af27c.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 1,
                            "type": "image_body"
                        }
                    ],
                    "index": 1
                },
                {
                    "bbox": [
                        336,
                        202,
                        415,
                        227
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                336,
                                202,
                                415,
                                227
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        336,
                                        202,
                                        415,
                                        227
                                    ],
                                    "type": "inline_equation",
                                    "content": "R_{t} = - 1"
                                },
                                {
                                    "bbox": [
                                        336,
                                        202,
                                        415,
                                        227
                                    ],
                                    "type": "text",
                                    "content": " on all transitions"
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        64,
                        277,
                        490,
                        437
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                277,
                                490,
                                437
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        490,
                                        437
                                    ],
                                    "type": "text",
                                    "content": "The nonterminal states are "
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        490,
                                        437
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathcal{S} = \\{1,2,\\ldots ,14\\}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        490,
                                        437
                                    ],
                                    "type": "text",
                                    "content": ". There are four actions possible in each state, "
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        490,
                                        437
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathcal{A} = \\{\\mathrm{up}, \\mathrm{down}, \\mathrm{right}, \\mathrm{left}\\}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        490,
                                        437
                                    ],
                                    "type": "text",
                                    "content": ", which deterministically cause the corresponding state transitions, except that actions that would take the agent off the grid in fact leave the state unchanged. Thus, for instance, "
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        490,
                                        437
                                    ],
                                    "type": "inline_equation",
                                    "content": "p(6, - 1|5, \\mathrm{right}) = 1"
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        490,
                                        437
                                    ],
                                    "type": "text",
                                    "content": ", "
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        490,
                                        437
                                    ],
                                    "type": "inline_equation",
                                    "content": "p(7, - 1|7, \\mathrm{right}) = 1"
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        490,
                                        437
                                    ],
                                    "type": "text",
                                    "content": ", and "
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        490,
                                        437
                                    ],
                                    "type": "inline_equation",
                                    "content": "p(10, r|5, \\mathrm{right}) = 0"
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        490,
                                        437
                                    ],
                                    "type": "text",
                                    "content": " for all "
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        490,
                                        437
                                    ],
                                    "type": "inline_equation",
                                    "content": "r \\in \\mathcal{R}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        490,
                                        437
                                    ],
                                    "type": "text",
                                    "content": ". This is an undiscounted, episodic task. The reward is "
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        490,
                                        437
                                    ],
                                    "type": "inline_equation",
                                    "content": "- 1"
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        490,
                                        437
                                    ],
                                    "type": "text",
                                    "content": " on all transitions until the terminal state is reached. The terminal state is shaded in the figure (although it is shown in two places, it is formally one state). The expected reward function is thus "
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        490,
                                        437
                                    ],
                                    "type": "inline_equation",
                                    "content": "r(s, a, s') = - 1"
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        490,
                                        437
                                    ],
                                    "type": "text",
                                    "content": " for all states "
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        490,
                                        437
                                    ],
                                    "type": "inline_equation",
                                    "content": "s, s'"
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        490,
                                        437
                                    ],
                                    "type": "text",
                                    "content": " and actions "
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        490,
                                        437
                                    ],
                                    "type": "inline_equation",
                                    "content": "a"
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        490,
                                        437
                                    ],
                                    "type": "text",
                                    "content": ". Suppose the agent follows the equiprobable random policy (all actions equally likely). The left side of Figure 4.1 shows the sequence of value functions "
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        490,
                                        437
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\{v_{k}\\}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        490,
                                        437
                                    ],
                                    "type": "text",
                                    "content": " computed by iterative policy evaluation. The final estimate is in fact "
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        490,
                                        437
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        490,
                                        437
                                    ],
                                    "type": "text",
                                    "content": ", which in this case gives for each state the negation of the expected number of steps from that state until termination."
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        64,
                        445,
                        489,
                        472
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                445,
                                489,
                                472
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        445,
                                        489,
                                        472
                                    ],
                                    "type": "text",
                                    "content": "Exercise 4.1 In Example 4.1, if "
                                },
                                {
                                    "bbox": [
                                        64,
                                        445,
                                        489,
                                        472
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi"
                                },
                                {
                                    "bbox": [
                                        64,
                                        445,
                                        489,
                                        472
                                    ],
                                    "type": "text",
                                    "content": " is the equiprobable random policy, what is "
                                },
                                {
                                    "bbox": [
                                        64,
                                        445,
                                        489,
                                        472
                                    ],
                                    "type": "inline_equation",
                                    "content": "q_{\\pi}(11, \\mathrm{down})"
                                },
                                {
                                    "bbox": [
                                        64,
                                        445,
                                        489,
                                        472
                                    ],
                                    "type": "text",
                                    "content": "? What is "
                                },
                                {
                                    "bbox": [
                                        64,
                                        445,
                                        489,
                                        472
                                    ],
                                    "type": "inline_equation",
                                    "content": "q_{\\pi}(7, \\mathrm{down})"
                                },
                                {
                                    "bbox": [
                                        64,
                                        445,
                                        489,
                                        472
                                    ],
                                    "type": "text",
                                    "content": "?"
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        64,
                        479,
                        490,
                        559
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                479,
                                490,
                                559
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        479,
                                        490,
                                        559
                                    ],
                                    "type": "text",
                                    "content": "Exercise 4.2 In Example 4.1, suppose a new state 15 is added to the gridworld just below state 13, and its actions, left, up, right, and down, take the agent to states 12, 13, 14, and 15, respectively. Assume that the transitions from the original states are unchanged. What, then, is "
                                },
                                {
                                    "bbox": [
                                        64,
                                        479,
                                        490,
                                        559
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi}(15)"
                                },
                                {
                                    "bbox": [
                                        64,
                                        479,
                                        490,
                                        559
                                    ],
                                    "type": "text",
                                    "content": " for the equiprobable random policy? Now suppose the dynamics of state 13 are also changed, such that action down from state 13 takes the agent to the new state 15. What is "
                                },
                                {
                                    "bbox": [
                                        64,
                                        479,
                                        490,
                                        559
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi}(15)"
                                },
                                {
                                    "bbox": [
                                        64,
                                        479,
                                        490,
                                        559
                                    ],
                                    "type": "text",
                                    "content": " for the equiprobable random policy in this case?"
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        64,
                        566,
                        489,
                        593
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                566,
                                489,
                                593
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        566,
                                        489,
                                        593
                                    ],
                                    "type": "text",
                                    "content": "Exercise 4.3 What are the equations analogous to (4.3), (4.4), and (4.5), but for action- value functions instead of state- value functions?"
                                }
                            ]
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        64,
                        628,
                        265,
                        645
                    ],
                    "type": "title",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                628,
                                265,
                                645
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        628,
                                        265,
                                        645
                                    ],
                                    "type": "text",
                                    "content": "4.2 Policy Improvement"
                                }
                            ]
                        }
                    ],
                    "index": 7,
                    "level": 1
                },
                {
                    "bbox": [
                        64,
                        660,
                        490,
                        740
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                660,
                                490,
                                740
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        660,
                                        490,
                                        740
                                    ],
                                    "type": "text",
                                    "content": "Our reason for computing the value function for a policy is to help find better policies. Suppose we have determined the value function "
                                },
                                {
                                    "bbox": [
                                        64,
                                        660,
                                        490,
                                        740
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        660,
                                        490,
                                        740
                                    ],
                                    "type": "text",
                                    "content": " for an arbitrary deterministic policy "
                                },
                                {
                                    "bbox": [
                                        64,
                                        660,
                                        490,
                                        740
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi"
                                },
                                {
                                    "bbox": [
                                        64,
                                        660,
                                        490,
                                        740
                                    ],
                                    "type": "text",
                                    "content": ". For some state "
                                },
                                {
                                    "bbox": [
                                        64,
                                        660,
                                        490,
                                        740
                                    ],
                                    "type": "inline_equation",
                                    "content": "s"
                                },
                                {
                                    "bbox": [
                                        64,
                                        660,
                                        490,
                                        740
                                    ],
                                    "type": "text",
                                    "content": " we would like to know whether or not we should change the policy to deterministically choose an action "
                                },
                                {
                                    "bbox": [
                                        64,
                                        660,
                                        490,
                                        740
                                    ],
                                    "type": "inline_equation",
                                    "content": "a \\neq \\pi (s)"
                                },
                                {
                                    "bbox": [
                                        64,
                                        660,
                                        490,
                                        740
                                    ],
                                    "type": "text",
                                    "content": ". We know how good it is to follow the current policy from "
                                },
                                {
                                    "bbox": [
                                        64,
                                        660,
                                        490,
                                        740
                                    ],
                                    "type": "inline_equation",
                                    "content": "s"
                                },
                                {
                                    "bbox": [
                                        64,
                                        660,
                                        490,
                                        740
                                    ],
                                    "type": "text",
                                    "content": "—that is "
                                },
                                {
                                    "bbox": [
                                        64,
                                        660,
                                        490,
                                        740
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi}(s)"
                                },
                                {
                                    "bbox": [
                                        64,
                                        660,
                                        490,
                                        740
                                    ],
                                    "type": "text",
                                    "content": "—but would it be better or worse to change to the new policy? One way to answer this question is to consider selecting "
                                },
                                {
                                    "bbox": [
                                        64,
                                        660,
                                        490,
                                        740
                                    ],
                                    "type": "inline_equation",
                                    "content": "a"
                                },
                                {
                                    "bbox": [
                                        64,
                                        660,
                                        490,
                                        740
                                    ],
                                    "type": "text",
                                    "content": " in "
                                },
                                {
                                    "bbox": [
                                        64,
                                        660,
                                        490,
                                        740
                                    ],
                                    "type": "inline_equation",
                                    "content": "s"
                                },
                                {
                                    "bbox": [
                                        64,
                                        660,
                                        490,
                                        740
                                    ],
                                    "type": "text",
                                    "content": " and thereafter"
                                }
                            ]
                        }
                    ],
                    "index": 8
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                595,
                842
            ],
            "page_idx": 3
        },
        {
            "para_blocks": [
                {
                    "type": "image",
                    "bbox": [
                        172,
                        171,
                        455,
                        609
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                172,
                                171,
                                455,
                                609
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        172,
                                        171,
                                        455,
                                        609
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                172,
                                                171,
                                                455,
                                                609
                                            ],
                                            "type": "image",
                                            "image_path": "35bdd43500874eff650c832fc99870207e9fbf8d7910a18d41befa48394c652b.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 0,
                            "type": "image_body"
                        },
                        {
                            "bbox": [
                                104,
                                619,
                                531,
                                704
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        104,
                                        619,
                                        531,
                                        704
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                104,
                                                619,
                                                531,
                                                704
                                            ],
                                            "type": "text",
                                            "content": "Figure 4.1: Convergence of iterative policy evaluation on a small gridworld. The left column is the sequence of approximations of the state-value function for the random policy (all actions equally likely). The right column is the sequence of greedy policies corresponding to the value function estimates (arrows are shown for all actions achieving the maximum, and the numbers shown are rounded to two significant digits). The last policy is guaranteed only to be an improvement over the random policy, but in this case it, and all policies after the third iteration, are optimal."
                                        }
                                    ]
                                }
                            ],
                            "index": 1,
                            "type": "image_caption"
                        }
                    ],
                    "index": 0
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                595,
                842
            ],
            "page_idx": 4
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        63,
                        140,
                        397,
                        154
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                63,
                                140,
                                397,
                                154
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        63,
                                        140,
                                        397,
                                        154
                                    ],
                                    "type": "text",
                                    "content": "following the existing policy, "
                                },
                                {
                                    "bbox": [
                                        63,
                                        140,
                                        397,
                                        154
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi"
                                },
                                {
                                    "bbox": [
                                        63,
                                        140,
                                        397,
                                        154
                                    ],
                                    "type": "text",
                                    "content": ". The value of this way of behaving is"
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        91,
                        160,
                        489,
                        210
                    ],
                    "type": "interline_equation",
                    "lines": [
                        {
                            "bbox": [
                                91,
                                160,
                                489,
                                210
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        91,
                                        160,
                                        489,
                                        210
                                    ],
                                    "type": "interline_equation",
                                    "content": "\\begin{array}{l l l}{{q_{\\pi}(s,a)}}&{{\\doteq}}&{{\\mathbb{E}[R_{t+1}+\\gamma v_{\\pi}(S_{t+1})\\mid S_{t}=s,A_{t}=a]}}\\\\ {{}}&{{}}&{{}}\\\\ {{}}&{{=}}&{{\\sum_{s^{\\prime},r}p(s^{\\prime},r\\mid s,a)\\Big[r+\\gamma v_{\\pi}(s^{\\prime})\\Big].}}\\end{array} \\tag{4.6}",
                                    "image_path": "57497520800a27c3dfb63aea20237fbb615cf2847ce581b37a5d74dc8d41030f.jpg"
                                }
                            ]
                        }
                    ],
                    "index": 1
                },
                {
                    "bbox": [
                        64,
                        214,
                        489,
                        268
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                214,
                                489,
                                268
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        214,
                                        489,
                                        268
                                    ],
                                    "type": "text",
                                    "content": "The key criterion is whether this is greater than or less than "
                                },
                                {
                                    "bbox": [
                                        64,
                                        214,
                                        489,
                                        268
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi}(s)"
                                },
                                {
                                    "bbox": [
                                        64,
                                        214,
                                        489,
                                        268
                                    ],
                                    "type": "text",
                                    "content": ". If it is greater—that is, if it is better to select "
                                },
                                {
                                    "bbox": [
                                        64,
                                        214,
                                        489,
                                        268
                                    ],
                                    "type": "inline_equation",
                                    "content": "a"
                                },
                                {
                                    "bbox": [
                                        64,
                                        214,
                                        489,
                                        268
                                    ],
                                    "type": "text",
                                    "content": " once in "
                                },
                                {
                                    "bbox": [
                                        64,
                                        214,
                                        489,
                                        268
                                    ],
                                    "type": "inline_equation",
                                    "content": "s"
                                },
                                {
                                    "bbox": [
                                        64,
                                        214,
                                        489,
                                        268
                                    ],
                                    "type": "text",
                                    "content": " and thereafter follow "
                                },
                                {
                                    "bbox": [
                                        64,
                                        214,
                                        489,
                                        268
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi"
                                },
                                {
                                    "bbox": [
                                        64,
                                        214,
                                        489,
                                        268
                                    ],
                                    "type": "text",
                                    "content": " than it would be to follow "
                                },
                                {
                                    "bbox": [
                                        64,
                                        214,
                                        489,
                                        268
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi"
                                },
                                {
                                    "bbox": [
                                        64,
                                        214,
                                        489,
                                        268
                                    ],
                                    "type": "text",
                                    "content": " all the time—then one would expect it to be better still to select "
                                },
                                {
                                    "bbox": [
                                        64,
                                        214,
                                        489,
                                        268
                                    ],
                                    "type": "inline_equation",
                                    "content": "a"
                                },
                                {
                                    "bbox": [
                                        64,
                                        214,
                                        489,
                                        268
                                    ],
                                    "type": "text",
                                    "content": " every time "
                                },
                                {
                                    "bbox": [
                                        64,
                                        214,
                                        489,
                                        268
                                    ],
                                    "type": "inline_equation",
                                    "content": "s"
                                },
                                {
                                    "bbox": [
                                        64,
                                        214,
                                        489,
                                        268
                                    ],
                                    "type": "text",
                                    "content": " is encountered, and that the new policy would in fact be a better one overall."
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        64,
                        270,
                        490,
                        297
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                270,
                                490,
                                297
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        270,
                                        490,
                                        297
                                    ],
                                    "type": "text",
                                    "content": "That this is true is a special case of a general result called the policy improvement theorem. Let "
                                },
                                {
                                    "bbox": [
                                        64,
                                        270,
                                        490,
                                        297
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi"
                                },
                                {
                                    "bbox": [
                                        64,
                                        270,
                                        490,
                                        297
                                    ],
                                    "type": "text",
                                    "content": " and "
                                },
                                {
                                    "bbox": [
                                        64,
                                        270,
                                        490,
                                        297
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi '"
                                },
                                {
                                    "bbox": [
                                        64,
                                        270,
                                        490,
                                        297
                                    ],
                                    "type": "text",
                                    "content": " be any pair of deterministic policies such that, for all "
                                },
                                {
                                    "bbox": [
                                        64,
                                        270,
                                        490,
                                        297
                                    ],
                                    "type": "inline_equation",
                                    "content": "s \\in \\mathcal{S}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        270,
                                        490,
                                        297
                                    ],
                                    "type": "text",
                                    "content": ","
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        91,
                        304,
                        489,
                        319
                    ],
                    "type": "interline_equation",
                    "lines": [
                        {
                            "bbox": [
                                91,
                                304,
                                489,
                                319
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        91,
                                        304,
                                        489,
                                        319
                                    ],
                                    "type": "interline_equation",
                                    "content": "q_{\\pi}(s, \\pi '(s)) \\geq v_{\\pi}(s). \\tag{4.7}",
                                    "image_path": "052de0e935f7e90861669db39620e1ab7c5c0a955c6e6bcfc1c64a134678aa4d.jpg"
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        64,
                        326,
                        489,
                        353
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                326,
                                489,
                                353
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        326,
                                        489,
                                        353
                                    ],
                                    "type": "text",
                                    "content": "Then the policy "
                                },
                                {
                                    "bbox": [
                                        64,
                                        326,
                                        489,
                                        353
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi '"
                                },
                                {
                                    "bbox": [
                                        64,
                                        326,
                                        489,
                                        353
                                    ],
                                    "type": "text",
                                    "content": " must be as good as, or better than, "
                                },
                                {
                                    "bbox": [
                                        64,
                                        326,
                                        489,
                                        353
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi"
                                },
                                {
                                    "bbox": [
                                        64,
                                        326,
                                        489,
                                        353
                                    ],
                                    "type": "text",
                                    "content": ". That is, it must obtain greater or equal expected return from all states "
                                },
                                {
                                    "bbox": [
                                        64,
                                        326,
                                        489,
                                        353
                                    ],
                                    "type": "inline_equation",
                                    "content": "s \\in \\mathcal{S}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        326,
                                        489,
                                        353
                                    ],
                                    "type": "text",
                                    "content": ":"
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        91,
                        362,
                        489,
                        377
                    ],
                    "type": "interline_equation",
                    "lines": [
                        {
                            "bbox": [
                                91,
                                362,
                                489,
                                377
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        91,
                                        362,
                                        489,
                                        377
                                    ],
                                    "type": "interline_equation",
                                    "content": "v_{\\pi^{\\prime}}(s)\\geq v_{\\pi}(s). \\tag{4.8}",
                                    "image_path": "b79c32d841e18487bd1670f19d66dd72483848d4746f584db31948c05ad48857.jpg"
                                }
                            ]
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        64,
                        384,
                        489,
                        411
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                384,
                                489,
                                411
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        384,
                                        489,
                                        411
                                    ],
                                    "type": "text",
                                    "content": "Moreover, if there is strict inequality of (4.7) at any state, then there must be strict inequality of (4.8) at that state."
                                }
                            ]
                        }
                    ],
                    "index": 7
                },
                {
                    "bbox": [
                        64,
                        412,
                        489,
                        479
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                412,
                                489,
                                479
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        412,
                                        489,
                                        479
                                    ],
                                    "type": "text",
                                    "content": "The policy improvement theorem applies to the two policies that we considered at the beginning of this section: an original deterministic policy, "
                                },
                                {
                                    "bbox": [
                                        64,
                                        412,
                                        489,
                                        479
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi"
                                },
                                {
                                    "bbox": [
                                        64,
                                        412,
                                        489,
                                        479
                                    ],
                                    "type": "text",
                                    "content": ", and a changed policy, "
                                },
                                {
                                    "bbox": [
                                        64,
                                        412,
                                        489,
                                        479
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi '"
                                },
                                {
                                    "bbox": [
                                        64,
                                        412,
                                        489,
                                        479
                                    ],
                                    "type": "text",
                                    "content": ", that is identical to "
                                },
                                {
                                    "bbox": [
                                        64,
                                        412,
                                        489,
                                        479
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi"
                                },
                                {
                                    "bbox": [
                                        64,
                                        412,
                                        489,
                                        479
                                    ],
                                    "type": "text",
                                    "content": " except that "
                                },
                                {
                                    "bbox": [
                                        64,
                                        412,
                                        489,
                                        479
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi '(s) = a \\neq \\pi (s)"
                                },
                                {
                                    "bbox": [
                                        64,
                                        412,
                                        489,
                                        479
                                    ],
                                    "type": "text",
                                    "content": ". For states other than "
                                },
                                {
                                    "bbox": [
                                        64,
                                        412,
                                        489,
                                        479
                                    ],
                                    "type": "inline_equation",
                                    "content": "s"
                                },
                                {
                                    "bbox": [
                                        64,
                                        412,
                                        489,
                                        479
                                    ],
                                    "type": "text",
                                    "content": ", (4.7) holds because the two sides are equal. Thus, if "
                                },
                                {
                                    "bbox": [
                                        64,
                                        412,
                                        489,
                                        479
                                    ],
                                    "type": "inline_equation",
                                    "content": "q_{\\pi}(s, a) > v_{\\pi}(s)"
                                },
                                {
                                    "bbox": [
                                        64,
                                        412,
                                        489,
                                        479
                                    ],
                                    "type": "text",
                                    "content": ", then the changed policy is indeed better than "
                                },
                                {
                                    "bbox": [
                                        64,
                                        412,
                                        489,
                                        479
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi"
                                },
                                {
                                    "bbox": [
                                        64,
                                        412,
                                        489,
                                        479
                                    ],
                                    "type": "text",
                                    "content": "."
                                }
                            ]
                        }
                    ],
                    "index": 8
                },
                {
                    "bbox": [
                        64,
                        479,
                        489,
                        520
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                479,
                                489,
                                520
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        479,
                                        489,
                                        520
                                    ],
                                    "type": "text",
                                    "content": "The idea behind the proof of the policy improvement theorem is easy to understand. Starting from (4.7), we keep expanding the "
                                },
                                {
                                    "bbox": [
                                        64,
                                        479,
                                        489,
                                        520
                                    ],
                                    "type": "inline_equation",
                                    "content": "q_{\\pi}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        479,
                                        489,
                                        520
                                    ],
                                    "type": "text",
                                    "content": " side with (4.6) and reapplying (4.7) until we get "
                                },
                                {
                                    "bbox": [
                                        64,
                                        479,
                                        489,
                                        520
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi '}(s)"
                                },
                                {
                                    "bbox": [
                                        64,
                                        479,
                                        489,
                                        520
                                    ],
                                    "type": "text",
                                    "content": ":"
                                }
                            ]
                        }
                    ],
                    "index": 9
                },
                {
                    "bbox": [
                        90,
                        526,
                        489,
                        707
                    ],
                    "type": "interline_equation",
                    "lines": [
                        {
                            "bbox": [
                                90,
                                526,
                                489,
                                707
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        90,
                                        526,
                                        489,
                                        707
                                    ],
                                    "type": "interline_equation",
                                    "content": "\\begin{array}{r l} & {v_{\\pi}(s)\\leq q_{\\pi}(s,\\pi^{\\prime}(s))}\\\\ & {\\qquad = \\mathbb{E}[R_{t + 1} + \\gamma v_{\\pi}(S_{t + 1})\\mid S_{t} = s,A_{t} = \\pi^{\\prime}(s)]}\\\\ & {\\qquad = \\mathbb{E}_{\\pi^{\\prime}}[R_{t + 1} + \\gamma v_{\\pi}(S_{t + 1})\\mid S_{t} = s]}\\\\ & {\\qquad \\leq \\mathbb{E}_{\\pi^{\\prime}}[R_{t + 1} + \\gamma q_{\\pi}(S_{t + 1},\\pi^{\\prime}(S_{t + 1}))\\mid S_{t} = s]}\\\\ & {\\qquad = \\mathbb{E}_{\\pi^{\\prime}}[R_{t + 1} + \\gamma \\mathbb{E}[R_{t + 2} + \\gamma v_{\\pi}(S_{t + 2})|S_{t + 1},A_{t + 1} = \\pi^{\\prime}(S_{t + 1})]\\mid S_{t} = s]}\\\\ & {\\qquad = \\mathbb{E}_{\\pi^{\\prime}}[R_{t + 1} + \\gamma R_{t + 2} + \\gamma^{2}v_{\\pi}(S_{t + 2})\\mid S_{t} = s]}\\\\ & {\\qquad \\leq \\mathbb{E}_{\\pi^{\\prime}}[R_{t + 1} + \\gamma R_{t + 2} + \\gamma^{2}R_{t + 3} + \\gamma^{3}v_{\\pi}(S_{t + 3})\\mid S_{t} = s]}\\\\ & {\\qquad \\vdots}\\\\ & {\\qquad \\leq \\mathbb{E}_{\\pi^{\\prime}}[R_{t + 1} + \\gamma R_{t + 2} + \\gamma^{2}R_{t + 3} + \\gamma^{3}R_{t + 4} + \\dots \\mid S_{t} = s]}\\\\ & {\\qquad = v_{\\pi^{\\prime}}(s).} \\end{array} \\tag{by (4.6)",
                                    "image_path": "4be143d3d39a22c268984ca0ad88a4b5a42743f1fb7f24fe277aba419d85aa46.jpg"
                                }
                            ]
                        }
                    ],
                    "index": 10
                },
                {
                    "bbox": [
                        64,
                        713,
                        489,
                        740
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                713,
                                489,
                                740
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        713,
                                        489,
                                        740
                                    ],
                                    "type": "text",
                                    "content": "So far we have seen how, given a policy and its value function, we can easily evaluate a change in the policy at a single state. It is a natural extension to consider changes at"
                                }
                            ]
                        }
                    ],
                    "index": 11
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                595,
                842
            ],
            "page_idx": 5
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        103,
                        140,
                        529,
                        168
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                103,
                                140,
                                529,
                                168
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        103,
                                        140,
                                        529,
                                        168
                                    ],
                                    "type": "text",
                                    "content": "all states, selecting at each state the action that appears best according to "
                                },
                                {
                                    "bbox": [
                                        103,
                                        140,
                                        529,
                                        168
                                    ],
                                    "type": "inline_equation",
                                    "content": "q_{\\pi}(s,a)"
                                },
                                {
                                    "bbox": [
                                        103,
                                        140,
                                        529,
                                        168
                                    ],
                                    "type": "text",
                                    "content": ". In other words, to consider the new greedy policy, "
                                },
                                {
                                    "bbox": [
                                        103,
                                        140,
                                        529,
                                        168
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi '"
                                },
                                {
                                    "bbox": [
                                        103,
                                        140,
                                        529,
                                        168
                                    ],
                                    "type": "text",
                                    "content": ", given by"
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        130,
                        176,
                        528,
                        256
                    ],
                    "type": "interline_equation",
                    "lines": [
                        {
                            "bbox": [
                                130,
                                176,
                                528,
                                256
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        130,
                                        176,
                                        528,
                                        256
                                    ],
                                    "type": "interline_equation",
                                    "content": "\\begin{array}{l l l}{{\\pi^{\\prime}(s)}}&{{\\doteq}}&{{\\arg\\max _{a}q_{\\pi}(s,a)}}\\\\ {{}}&{{}}&{{}}\\\\ {{}}&{{=}}&{{\\arg\\max _{a}\\mathbb{E}[R_{t+1}+\\gamma v_{\\pi}(S_{t+1})\\mid S_{t}=s,A_{t}=a]}}\\\\ {{}}&{{}}&{{}}\\\\ {{}}&{{=}}&{{\\arg\\max _{a}\\sum_{s^{\\prime},r}p(s^{\\prime},r\\mid s,a)\\Big[r+\\gamma v_{\\pi}(s^{\\prime})\\Big],}}\\end{array} \\tag{4.9}",
                                    "image_path": "58874348bed3ac28a25893fce93fb009d27cceccf1e295c019af190d32faac7d.jpg"
                                }
                            ]
                        }
                    ],
                    "index": 1
                },
                {
                    "bbox": [
                        103,
                        264,
                        530,
                        357
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                103,
                                264,
                                530,
                                357
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        103,
                                        264,
                                        530,
                                        357
                                    ],
                                    "type": "text",
                                    "content": "where "
                                },
                                {
                                    "bbox": [
                                        103,
                                        264,
                                        530,
                                        357
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\arg \\max_{a}"
                                },
                                {
                                    "bbox": [
                                        103,
                                        264,
                                        530,
                                        357
                                    ],
                                    "type": "text",
                                    "content": " denotes the value of "
                                },
                                {
                                    "bbox": [
                                        103,
                                        264,
                                        530,
                                        357
                                    ],
                                    "type": "inline_equation",
                                    "content": "a"
                                },
                                {
                                    "bbox": [
                                        103,
                                        264,
                                        530,
                                        357
                                    ],
                                    "type": "text",
                                    "content": " at which the expression that follows is maximized (with ties broken arbitrarily). The greedy policy takes the action that looks best in the short term—after one step of lookahead—according to "
                                },
                                {
                                    "bbox": [
                                        103,
                                        264,
                                        530,
                                        357
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi}"
                                },
                                {
                                    "bbox": [
                                        103,
                                        264,
                                        530,
                                        357
                                    ],
                                    "type": "text",
                                    "content": ". By construction, the greedy policy meets the conditions of the policy improvement theorem (4.7), so we know that it is as good as, or better than, the original policy. The process of making a new policy that improves on an original policy, by making it greedy with respect to the value function of the original policy, is called policy improvement."
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        103,
                        359,
                        530,
                        386
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                103,
                                359,
                                530,
                                386
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        103,
                                        359,
                                        530,
                                        386
                                    ],
                                    "type": "text",
                                    "content": "Suppose the new greedy policy, "
                                },
                                {
                                    "bbox": [
                                        103,
                                        359,
                                        530,
                                        386
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi '"
                                },
                                {
                                    "bbox": [
                                        103,
                                        359,
                                        530,
                                        386
                                    ],
                                    "type": "text",
                                    "content": ", is as good as, but not better than, the old policy "
                                },
                                {
                                    "bbox": [
                                        103,
                                        359,
                                        530,
                                        386
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi"
                                },
                                {
                                    "bbox": [
                                        103,
                                        359,
                                        530,
                                        386
                                    ],
                                    "type": "text",
                                    "content": ". Then "
                                },
                                {
                                    "bbox": [
                                        103,
                                        359,
                                        530,
                                        386
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi} = v_{\\pi '}"
                                },
                                {
                                    "bbox": [
                                        103,
                                        359,
                                        530,
                                        386
                                    ],
                                    "type": "text",
                                    "content": ", and from (4.9) it follows that for all "
                                },
                                {
                                    "bbox": [
                                        103,
                                        359,
                                        530,
                                        386
                                    ],
                                    "type": "inline_equation",
                                    "content": "s \\in \\mathbb{S}"
                                },
                                {
                                    "bbox": [
                                        103,
                                        359,
                                        530,
                                        386
                                    ],
                                    "type": "text",
                                    "content": ":"
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        132,
                        396,
                        389,
                        450
                    ],
                    "type": "interline_equation",
                    "lines": [
                        {
                            "bbox": [
                                132,
                                396,
                                389,
                                450
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        132,
                                        396,
                                        389,
                                        450
                                    ],
                                    "type": "interline_equation",
                                    "content": "\\begin{array}{r c l}{{v_{\\pi^{\\prime}}(s)}}&{{=}}&{{\\max _{a}\\mathbb{E}[R_{t+1}+\\gamma v_{\\pi^{\\prime}}(S_{t+1})\\mid S_{t}=s,A_{t}=a]}}\\\\ {{}}&{{=}}&{{\\max _{a}\\sum_{s^{\\prime},r}p(s^{\\prime},r\\mid s,a)\\Big[r+\\gamma v_{\\pi^{\\prime}}(s^{\\prime})\\Big].}}\\end{array}",
                                    "image_path": "6220e9b785edf9a58b9cb043a1dc79cd990369065b2db40a202e3280c16d4c47.jpg"
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        104,
                        458,
                        529,
                        499
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                458,
                                529,
                                499
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        458,
                                        529,
                                        499
                                    ],
                                    "type": "text",
                                    "content": "But this is the same as the Bellman optimality equation (4.1), and therefore, "
                                },
                                {
                                    "bbox": [
                                        104,
                                        458,
                                        529,
                                        499
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi '}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        458,
                                        529,
                                        499
                                    ],
                                    "type": "text",
                                    "content": " must be "
                                },
                                {
                                    "bbox": [
                                        104,
                                        458,
                                        529,
                                        499
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{*}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        458,
                                        529,
                                        499
                                    ],
                                    "type": "text",
                                    "content": ", and both "
                                },
                                {
                                    "bbox": [
                                        104,
                                        458,
                                        529,
                                        499
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi"
                                },
                                {
                                    "bbox": [
                                        104,
                                        458,
                                        529,
                                        499
                                    ],
                                    "type": "text",
                                    "content": " and "
                                },
                                {
                                    "bbox": [
                                        104,
                                        458,
                                        529,
                                        499
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi '"
                                },
                                {
                                    "bbox": [
                                        104,
                                        458,
                                        529,
                                        499
                                    ],
                                    "type": "text",
                                    "content": " must be optimal policies. Policy improvement thus must give us a strictly better policy except when the original policy is already optimal."
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        104,
                        500,
                        530,
                        633
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                500,
                                530,
                                633
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        500,
                                        530,
                                        633
                                    ],
                                    "type": "text",
                                    "content": "So far in this section we have considered the special case of deterministic policies. In the general case, a stochastic policy "
                                },
                                {
                                    "bbox": [
                                        104,
                                        500,
                                        530,
                                        633
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi"
                                },
                                {
                                    "bbox": [
                                        104,
                                        500,
                                        530,
                                        633
                                    ],
                                    "type": "text",
                                    "content": " specifies probabilities, "
                                },
                                {
                                    "bbox": [
                                        104,
                                        500,
                                        530,
                                        633
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi (a|s)"
                                },
                                {
                                    "bbox": [
                                        104,
                                        500,
                                        530,
                                        633
                                    ],
                                    "type": "text",
                                    "content": ", for taking each action, "
                                },
                                {
                                    "bbox": [
                                        104,
                                        500,
                                        530,
                                        633
                                    ],
                                    "type": "inline_equation",
                                    "content": "a"
                                },
                                {
                                    "bbox": [
                                        104,
                                        500,
                                        530,
                                        633
                                    ],
                                    "type": "text",
                                    "content": ", in each state, "
                                },
                                {
                                    "bbox": [
                                        104,
                                        500,
                                        530,
                                        633
                                    ],
                                    "type": "inline_equation",
                                    "content": "s"
                                },
                                {
                                    "bbox": [
                                        104,
                                        500,
                                        530,
                                        633
                                    ],
                                    "type": "text",
                                    "content": ". We will not go through the details, but in fact all the ideas of this section extend easily to stochastic policies. In particular, the policy improvement theorem carries through as stated for the stochastic case. In addition, if there are ties in policy improvement steps such as (4.9)—that is, if there are several actions at which the maximum is achieved—then in the stochastic case we need not select a single action from among them. Instead, each maximizing action can be given a portion of the probability of being selected in the new greedy policy. Any apportioning scheme is allowed as long as all submaximal actions are given zero probability."
                                }
                            ]
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        104,
                        634,
                        530,
                        740
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                634,
                                530,
                                740
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "text",
                                    "content": "The last row of Figure 4.1 shows an example of policy improvement for stochastic policies. Here the original policy, "
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi"
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "text",
                                    "content": ", is the equiprobable random policy, and the new policy, "
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi '"
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "text",
                                    "content": ", is greedy with respect to "
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "text",
                                    "content": ". The value function "
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "text",
                                    "content": " is shown in the bottom- left diagram and the set of possible "
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi '"
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "text",
                                    "content": " is shown in the bottom- right diagram. The states with multiple arrows in the "
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi '"
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "text",
                                    "content": " diagram are those in which several actions achieve the maximum in (4.9); any apportionment of probability among these actions is permitted. For any such policy, its state values "
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi '(s)}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "text",
                                    "content": " can be seen by inspection to be either "
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "inline_equation",
                                    "content": "- 1"
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "text",
                                    "content": ", "
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "inline_equation",
                                    "content": "- 2"
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "text",
                                    "content": ", or "
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "inline_equation",
                                    "content": "- 3"
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "text",
                                    "content": ", for all states "
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "inline_equation",
                                    "content": "s \\in \\mathbb{S}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "text",
                                    "content": ", whereas "
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi}(s)"
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "text",
                                    "content": " is at most "
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "inline_equation",
                                    "content": "- 14"
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "text",
                                    "content": ". Thus, "
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi '(s)} \\geq v_{\\pi}(s)"
                                },
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        530,
                                        740
                                    ],
                                    "type": "text",
                                    "content": ", for all"
                                }
                            ]
                        }
                    ],
                    "index": 7
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                595,
                842
            ],
            "page_idx": 6
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        64,
                        140,
                        489,
                        168
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                140,
                                489,
                                168
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        140,
                                        489,
                                        168
                                    ],
                                    "type": "inline_equation",
                                    "content": "s \\in \\mathcal{S}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        140,
                                        489,
                                        168
                                    ],
                                    "type": "text",
                                    "content": ", illustrating policy improvement. Although in this case the new policy "
                                },
                                {
                                    "bbox": [
                                        64,
                                        140,
                                        489,
                                        168
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi '"
                                },
                                {
                                    "bbox": [
                                        64,
                                        140,
                                        489,
                                        168
                                    ],
                                    "type": "text",
                                    "content": " happens to be optimal, in general only an improvement is guaranteed."
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        64,
                        187,
                        229,
                        205
                    ],
                    "type": "title",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                187,
                                229,
                                205
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        187,
                                        229,
                                        205
                                    ],
                                    "type": "text",
                                    "content": "4.3 Policy Iteration"
                                }
                            ]
                        }
                    ],
                    "index": 1,
                    "level": 1
                },
                {
                    "bbox": [
                        64,
                        216,
                        489,
                        256
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                216,
                                489,
                                256
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        216,
                                        489,
                                        256
                                    ],
                                    "type": "text",
                                    "content": "Once a policy, "
                                },
                                {
                                    "bbox": [
                                        64,
                                        216,
                                        489,
                                        256
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi"
                                },
                                {
                                    "bbox": [
                                        64,
                                        216,
                                        489,
                                        256
                                    ],
                                    "type": "text",
                                    "content": ", has been improved using "
                                },
                                {
                                    "bbox": [
                                        64,
                                        216,
                                        489,
                                        256
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        216,
                                        489,
                                        256
                                    ],
                                    "type": "text",
                                    "content": " to yield a better policy, "
                                },
                                {
                                    "bbox": [
                                        64,
                                        216,
                                        489,
                                        256
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi '"
                                },
                                {
                                    "bbox": [
                                        64,
                                        216,
                                        489,
                                        256
                                    ],
                                    "type": "text",
                                    "content": ", we can then compute "
                                },
                                {
                                    "bbox": [
                                        64,
                                        216,
                                        489,
                                        256
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi '}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        216,
                                        489,
                                        256
                                    ],
                                    "type": "text",
                                    "content": " and improve it again to yield an even better "
                                },
                                {
                                    "bbox": [
                                        64,
                                        216,
                                        489,
                                        256
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi ''"
                                },
                                {
                                    "bbox": [
                                        64,
                                        216,
                                        489,
                                        256
                                    ],
                                    "type": "text",
                                    "content": ". We can thus obtain a sequence of monotonically improving policies and value functions:"
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        92,
                        266,
                        361,
                        282
                    ],
                    "type": "interline_equation",
                    "lines": [
                        {
                            "bbox": [
                                92,
                                266,
                                361,
                                282
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        92,
                                        266,
                                        361,
                                        282
                                    ],
                                    "type": "interline_equation",
                                    "content": "\\pi_{0} \\xrightarrow{\\mathrm{~E~}} v_{\\pi_{0}} \\xrightarrow{\\mathrm{~I~}} \\pi_{1} \\xrightarrow{\\mathrm{~E~}} v_{\\pi_{1}} \\xrightarrow{\\mathrm{~I~}} \\pi_{2} \\xrightarrow{\\mathrm{~E~}} \\dots \\xrightarrow{\\mathrm{~I~}} \\pi_{*} \\xrightarrow{\\mathrm{~E~}} v_{*},",
                                    "image_path": "a5f94da355361529f8a90c7deaf8f9bc3b7dd5983a64cc444ca10ae0239566af.jpg"
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        64,
                        292,
                        489,
                        359
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                292,
                                489,
                                359
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        292,
                                        489,
                                        359
                                    ],
                                    "type": "text",
                                    "content": "where "
                                },
                                {
                                    "bbox": [
                                        64,
                                        292,
                                        489,
                                        359
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\xrightarrow{\\mathrm{~E~}}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        292,
                                        489,
                                        359
                                    ],
                                    "type": "text",
                                    "content": " denotes a policy evaluation and "
                                },
                                {
                                    "bbox": [
                                        64,
                                        292,
                                        489,
                                        359
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\xrightarrow{\\mathrm{~I~}}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        292,
                                        489,
                                        359
                                    ],
                                    "type": "text",
                                    "content": " denotes a policy improvement. Each policy is guaranteed to be a strict improvement over the previous one (unless it is already optimal). Because a finite MDP has only a finite number of deterministic policies, this process must converge to an optimal policy and the optimal value function in a finite number of iterations."
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        64,
                        361,
                        489,
                        427
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                361,
                                489,
                                427
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        361,
                                        489,
                                        427
                                    ],
                                    "type": "text",
                                    "content": "This way of finding an optimal policy is called policy iteration. A complete algorithm is given in the box below. Note that each policy evaluation, itself an iterative computation, is started with the value function for the previous policy. This typically results in a great increase in the speed of convergence of policy evaluation (presumably because the value function changes little from one policy to the next)."
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        76,
                        450,
                        480,
                        465
                    ],
                    "type": "title",
                    "lines": [
                        {
                            "bbox": [
                                76,
                                450,
                                480,
                                465
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        76,
                                        450,
                                        480,
                                        465
                                    ],
                                    "type": "text",
                                    "content": "Policy Iteration (using iterative policy evaluation) for estimating "
                                },
                                {
                                    "bbox": [
                                        76,
                                        450,
                                        480,
                                        465
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi \\approx \\pi_{*}"
                                }
                            ]
                        }
                    ],
                    "index": 6,
                    "level": 1
                },
                {
                    "bbox": [
                        77,
                        474,
                        155,
                        486
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                77,
                                474,
                                155,
                                486
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        77,
                                        474,
                                        155,
                                        486
                                    ],
                                    "type": "text",
                                    "content": "1. Initialization"
                                }
                            ]
                        }
                    ],
                    "index": 7
                },
                {
                    "bbox": [
                        91,
                        487,
                        422,
                        501
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                91,
                                487,
                                422,
                                501
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        91,
                                        487,
                                        422,
                                        501
                                    ],
                                    "type": "inline_equation",
                                    "content": "V(s) \\in \\mathbb{R}"
                                },
                                {
                                    "bbox": [
                                        91,
                                        487,
                                        422,
                                        501
                                    ],
                                    "type": "text",
                                    "content": " and "
                                },
                                {
                                    "bbox": [
                                        91,
                                        487,
                                        422,
                                        501
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi (s) \\in \\mathcal{A}(s)"
                                },
                                {
                                    "bbox": [
                                        91,
                                        487,
                                        422,
                                        501
                                    ],
                                    "type": "text",
                                    "content": " arbitrarily for all "
                                },
                                {
                                    "bbox": [
                                        91,
                                        487,
                                        422,
                                        501
                                    ],
                                    "type": "inline_equation",
                                    "content": "s \\in \\mathcal{S}"
                                },
                                {
                                    "bbox": [
                                        91,
                                        487,
                                        422,
                                        501
                                    ],
                                    "type": "text",
                                    "content": "; "
                                },
                                {
                                    "bbox": [
                                        91,
                                        487,
                                        422,
                                        501
                                    ],
                                    "type": "inline_equation",
                                    "content": "V(\\text{terminal}) \\doteq 0"
                                }
                            ]
                        }
                    ],
                    "index": 8
                },
                {
                    "bbox": [
                        77,
                        514,
                        179,
                        527
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                77,
                                514,
                                179,
                                527
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        77,
                                        514,
                                        179,
                                        527
                                    ],
                                    "type": "text",
                                    "content": "2. Policy Evaluation"
                                }
                            ]
                        }
                    ],
                    "index": 9
                },
                {
                    "bbox": [
                        92,
                        528,
                        120,
                        540
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                92,
                                528,
                                120,
                                540
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        92,
                                        528,
                                        120,
                                        540
                                    ],
                                    "type": "text",
                                    "content": "Loop:"
                                }
                            ]
                        }
                    ],
                    "index": 10
                },
                {
                    "bbox": [
                        110,
                        542,
                        145,
                        553
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                110,
                                542,
                                145,
                                553
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        110,
                                        542,
                                        145,
                                        553
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\Delta \\leftarrow 0"
                                }
                            ]
                        }
                    ],
                    "index": 11
                },
                {
                    "bbox": [
                        110,
                        554,
                        209,
                        566
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                110,
                                554,
                                209,
                                566
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        110,
                                        554,
                                        209,
                                        566
                                    ],
                                    "type": "text",
                                    "content": "Loop for each "
                                },
                                {
                                    "bbox": [
                                        110,
                                        554,
                                        209,
                                        566
                                    ],
                                    "type": "inline_equation",
                                    "content": "s \\in \\mathcal{S}"
                                },
                                {
                                    "bbox": [
                                        110,
                                        554,
                                        209,
                                        566
                                    ],
                                    "type": "text",
                                    "content": ":"
                                }
                            ]
                        }
                    ],
                    "index": 12
                },
                {
                    "bbox": [
                        129,
                        568,
                        326,
                        609
                    ],
                    "type": "interline_equation",
                    "lines": [
                        {
                            "bbox": [
                                129,
                                568,
                                326,
                                609
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        129,
                                        568,
                                        326,
                                        609
                                    ],
                                    "type": "interline_equation",
                                    "content": "\\begin{array}{r l} & {V(s)\\leftarrow \\sum_{s^{\\prime},r}p(s^{\\prime},r|s,\\pi (s))[r + \\gamma V(s^{\\prime})]}\\\\ & {\\Delta \\leftarrow \\max (\\Delta ,|v - V(s)|)} \\end{array}",
                                    "image_path": "5328c3820c501b9839e16ea478fc9a5c8506456a1ddfad391499a5078fc142ab.jpg"
                                }
                            ]
                        }
                    ],
                    "index": 13
                },
                {
                    "bbox": [
                        91,
                        608,
                        469,
                        622
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                91,
                                608,
                                469,
                                622
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        91,
                                        608,
                                        469,
                                        622
                                    ],
                                    "type": "text",
                                    "content": "until "
                                },
                                {
                                    "bbox": [
                                        91,
                                        608,
                                        469,
                                        622
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\Delta < \\theta"
                                },
                                {
                                    "bbox": [
                                        91,
                                        608,
                                        469,
                                        622
                                    ],
                                    "type": "text",
                                    "content": " (a small positive number determining the accuracy of estimation)"
                                }
                            ]
                        }
                    ],
                    "index": 14
                },
                {
                    "bbox": [
                        77,
                        634,
                        190,
                        647
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                77,
                                634,
                                190,
                                647
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        77,
                                        634,
                                        190,
                                        647
                                    ],
                                    "type": "text",
                                    "content": "3. Policy Improvement"
                                }
                            ]
                        }
                    ],
                    "index": 15
                },
                {
                    "bbox": [
                        91,
                        649,
                        189,
                        660
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                91,
                                649,
                                189,
                                660
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        91,
                                        649,
                                        189,
                                        660
                                    ],
                                    "type": "text",
                                    "content": "policy- stable "
                                },
                                {
                                    "bbox": [
                                        91,
                                        649,
                                        189,
                                        660
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\leftarrow"
                                },
                                {
                                    "bbox": [
                                        91,
                                        649,
                                        189,
                                        660
                                    ],
                                    "type": "text",
                                    "content": " true"
                                }
                            ]
                        }
                    ],
                    "index": 16
                },
                {
                    "bbox": [
                        91,
                        662,
                        166,
                        673
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                91,
                                662,
                                166,
                                673
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        91,
                                        662,
                                        166,
                                        673
                                    ],
                                    "type": "text",
                                    "content": "For each "
                                },
                                {
                                    "bbox": [
                                        91,
                                        662,
                                        166,
                                        673
                                    ],
                                    "type": "inline_equation",
                                    "content": "s \\in \\mathcal{S}"
                                },
                                {
                                    "bbox": [
                                        91,
                                        662,
                                        166,
                                        673
                                    ],
                                    "type": "text",
                                    "content": ":"
                                }
                            ]
                        }
                    ],
                    "index": 17
                },
                {
                    "bbox": [
                        111,
                        675,
                        196,
                        687
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                111,
                                675,
                                196,
                                687
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        111,
                                        675,
                                        196,
                                        687
                                    ],
                                    "type": "text",
                                    "content": "old- action "
                                },
                                {
                                    "bbox": [
                                        111,
                                        675,
                                        196,
                                        687
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\leftarrow \\pi (s)"
                                }
                            ]
                        }
                    ],
                    "index": 18
                },
                {
                    "bbox": [
                        110,
                        687,
                        334,
                        703
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                110,
                                687,
                                334,
                                703
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        110,
                                        687,
                                        334,
                                        703
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi (s) \\leftarrow \\arg \\max_{a} \\sum_{s', r} p(s', r | s, a) \\left[r + \\gamma V(s') \\right]"
                                }
                            ]
                        }
                    ],
                    "index": 19
                },
                {
                    "bbox": [
                        110,
                        703,
                        340,
                        715
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                110,
                                703,
                                340,
                                715
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        110,
                                        703,
                                        340,
                                        715
                                    ],
                                    "type": "text",
                                    "content": "If old- action "
                                },
                                {
                                    "bbox": [
                                        110,
                                        703,
                                        340,
                                        715
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\neq \\pi (s)"
                                },
                                {
                                    "bbox": [
                                        110,
                                        703,
                                        340,
                                        715
                                    ],
                                    "type": "text",
                                    "content": ", then policy- stable "
                                },
                                {
                                    "bbox": [
                                        110,
                                        703,
                                        340,
                                        715
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\leftarrow"
                                },
                                {
                                    "bbox": [
                                        110,
                                        703,
                                        340,
                                        715
                                    ],
                                    "type": "text",
                                    "content": " false"
                                }
                            ]
                        }
                    ],
                    "index": 20
                },
                {
                    "bbox": [
                        91,
                        716,
                        428,
                        729
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                91,
                                716,
                                428,
                                729
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        91,
                                        716,
                                        428,
                                        729
                                    ],
                                    "type": "text",
                                    "content": "If policy- stable, then stop and return "
                                },
                                {
                                    "bbox": [
                                        91,
                                        716,
                                        428,
                                        729
                                    ],
                                    "type": "inline_equation",
                                    "content": "V \\approx v_{*}"
                                },
                                {
                                    "bbox": [
                                        91,
                                        716,
                                        428,
                                        729
                                    ],
                                    "type": "text",
                                    "content": " and "
                                },
                                {
                                    "bbox": [
                                        91,
                                        716,
                                        428,
                                        729
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi \\approx \\pi_{*}"
                                },
                                {
                                    "bbox": [
                                        91,
                                        716,
                                        428,
                                        729
                                    ],
                                    "type": "text",
                                    "content": "; else go to 2"
                                }
                            ]
                        }
                    ],
                    "index": 21
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                595,
                842
            ],
            "page_idx": 7
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        104,
                        140,
                        530,
                        380
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                140,
                                530,
                                380
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        140,
                                        530,
                                        380
                                    ],
                                    "type": "text",
                                    "content": "Example 4.2: Jack's Car Rental Jack manages two locations for a nationwide car rental company. Each day, some number of customers arrive at each location to rent cars. If Jack has a car available, he rents it out and is credited "
                                },
                                {
                                    "bbox": [
                                        104,
                                        140,
                                        530,
                                        380
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\) 10\\(by the national company. If he is out of cars at that location, then the business is lost. Cars become available for renting the day after they are returned. To help ensure that cars are available where they are needed, Jack can move them between the two locations overnight, at a cost of"
                                },
                                {
                                    "bbox": [
                                        104,
                                        140,
                                        530,
                                        380
                                    ],
                                    "type": "text",
                                    "content": "\\"
                                },
                                {
                                    "bbox": [
                                        104,
                                        140,
                                        530,
                                        380
                                    ],
                                    "type": "inline_equation",
                                    "content": "2"
                                },
                                {
                                    "bbox": [
                                        104,
                                        140,
                                        530,
                                        380
                                    ],
                                    "type": "text",
                                    "content": " per car moved. We assume that the number of cars requested and returned at each location are Poisson random variables, meaning that the probability that the number is "
                                },
                                {
                                    "bbox": [
                                        104,
                                        140,
                                        530,
                                        380
                                    ],
                                    "type": "inline_equation",
                                    "content": "n"
                                },
                                {
                                    "bbox": [
                                        104,
                                        140,
                                        530,
                                        380
                                    ],
                                    "type": "text",
                                    "content": " is "
                                },
                                {
                                    "bbox": [
                                        104,
                                        140,
                                        530,
                                        380
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\frac{\\lambda^n}{n!} e^{- \\lambda}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        140,
                                        530,
                                        380
                                    ],
                                    "type": "text",
                                    "content": ", where "
                                },
                                {
                                    "bbox": [
                                        104,
                                        140,
                                        530,
                                        380
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\lambda"
                                },
                                {
                                    "bbox": [
                                        104,
                                        140,
                                        530,
                                        380
                                    ],
                                    "type": "text",
                                    "content": " is the expected number. Suppose "
                                },
                                {
                                    "bbox": [
                                        104,
                                        140,
                                        530,
                                        380
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\lambda"
                                },
                                {
                                    "bbox": [
                                        104,
                                        140,
                                        530,
                                        380
                                    ],
                                    "type": "text",
                                    "content": " is 3 and 4 for rental requests at the first and second locations and 3 and 2 for returns. To simplify the problem slightly, we assume that there can be no more than 20 cars at each location (any additional cars are returned to the nationwide company, and thus disappear from the problem) and a maximum of five cars can be moved from one location to the other in one night. We take the discount rate to be "
                                },
                                {
                                    "bbox": [
                                        104,
                                        140,
                                        530,
                                        380
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\gamma = 0.9"
                                },
                                {
                                    "bbox": [
                                        104,
                                        140,
                                        530,
                                        380
                                    ],
                                    "type": "text",
                                    "content": " and formulate this as a continuing finite MDP, where the time steps are days, the state is the number of cars at each location at the end of the day, and the actions are the net numbers of cars moved between the two locations overnight. Figure 4.2 shows the sequence of policies found by policy iteration starting from the policy that never moves any cars."
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "type": "image",
                    "bbox": [
                        114,
                        392,
                        514,
                        662
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                114,
                                392,
                                514,
                                662
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        114,
                                        392,
                                        514,
                                        662
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                114,
                                                392,
                                                514,
                                                662
                                            ],
                                            "type": "image",
                                            "image_path": "662cb3b45480b2399d4859ac3ce311937a8720a5767b0d9a47e4437833e0dd00.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 1,
                            "type": "image_body"
                        },
                        {
                            "bbox": [
                                104,
                                674,
                                530,
                                737
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        104,
                                        674,
                                        530,
                                        737
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                104,
                                                674,
                                                530,
                                                737
                                            ],
                                            "type": "text",
                                            "content": "Figure 4.2: The sequence of policies found by policy iteration on Jack's car rental problem, and the final state-value function. The first five diagrams show, for each number of cars at each location at the end of the day, the number of cars to be moved from the first location to the second (negative numbers indicate transfers from the second location to the first). Each successive policy is a strict improvement over the previous policy, and the last policy is optimal."
                                        }
                                    ]
                                }
                            ],
                            "index": 2,
                            "type": "image_caption"
                        }
                    ],
                    "index": 1
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                595,
                842
            ],
            "page_idx": 8
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        64,
                        141,
                        489,
                        247
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                141,
                                489,
                                247
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        141,
                                        489,
                                        247
                                    ],
                                    "type": "text",
                                    "content": "Policy iteration often converges in surprisingly few iterations, as illustrated in the example of Jack's car rental and in the example in Figure 4.1. The bottom- left diagram of Figure 4.1 shows the value function for the equiprobable random policy, and the bottom- right diagram shows a greedy policy for this value function. The policy improvement theorem assures us that these policies are better than the original random policy. In this case, however, these policies are not just better, but optimal, proceeding to the terminal states in the minimum number of steps. In this example, policy iteration would find the optimal policy after just one iteration."
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        64,
                        251,
                        489,
                        304
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                251,
                                489,
                                304
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        251,
                                        489,
                                        304
                                    ],
                                    "type": "text",
                                    "content": "Exercise 4.4 The policy iteration algorithm on page 80 has a subtle bug in that it may never terminate if the policy continually switches between two or more policies that are equally good. This is okay for pedagogy, but not for actual use. Modify the pseudocode so that convergence is guaranteed."
                                }
                            ]
                        }
                    ],
                    "index": 1
                },
                {
                    "bbox": [
                        64,
                        309,
                        489,
                        362
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                309,
                                489,
                                362
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        309,
                                        489,
                                        362
                                    ],
                                    "type": "text",
                                    "content": "Exercise 4.5 How would policy iteration be defined for action values? Give a complete algorithm for computing "
                                },
                                {
                                    "bbox": [
                                        64,
                                        309,
                                        489,
                                        362
                                    ],
                                    "type": "inline_equation",
                                    "content": "q_{*}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        309,
                                        489,
                                        362
                                    ],
                                    "type": "text",
                                    "content": ", analogous to that on page 80 for computing "
                                },
                                {
                                    "bbox": [
                                        64,
                                        309,
                                        489,
                                        362
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{*}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        309,
                                        489,
                                        362
                                    ],
                                    "type": "text",
                                    "content": ". Please pay special attention to this exercise, because the ideas involved will be used throughout the rest of the book."
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        64,
                        367,
                        490,
                        420
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                367,
                                490,
                                420
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        367,
                                        490,
                                        420
                                    ],
                                    "type": "text",
                                    "content": "Exercise 4.6 Suppose you are restricted to considering only policies that are "
                                },
                                {
                                    "bbox": [
                                        64,
                                        367,
                                        490,
                                        420
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\epsilon"
                                },
                                {
                                    "bbox": [
                                        64,
                                        367,
                                        490,
                                        420
                                    ],
                                    "type": "text",
                                    "content": "- soft, meaning that the probability of selecting each action in each state, "
                                },
                                {
                                    "bbox": [
                                        64,
                                        367,
                                        490,
                                        420
                                    ],
                                    "type": "inline_equation",
                                    "content": "s"
                                },
                                {
                                    "bbox": [
                                        64,
                                        367,
                                        490,
                                        420
                                    ],
                                    "type": "text",
                                    "content": ", is at least "
                                },
                                {
                                    "bbox": [
                                        64,
                                        367,
                                        490,
                                        420
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\epsilon /|\\mathcal{A}(s)|"
                                },
                                {
                                    "bbox": [
                                        64,
                                        367,
                                        490,
                                        420
                                    ],
                                    "type": "text",
                                    "content": ". Describe qualitatively the changes that would be required in each of the steps 3, 2, and 1, in that order, of the policy iteration algorithm for "
                                },
                                {
                                    "bbox": [
                                        64,
                                        367,
                                        490,
                                        420
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{*}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        367,
                                        490,
                                        420
                                    ],
                                    "type": "text",
                                    "content": " on page 80."
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        64,
                        424,
                        489,
                        570
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                424,
                                489,
                                570
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        424,
                                        489,
                                        570
                                    ],
                                    "type": "text",
                                    "content": "Exercise 4.7 (programming). Write a program for policy iteration and re- solve Jack's car rental problem with the following changes. One of Jack's employees at the first location rides a bus home each night and lives near the second location. She is happy to shuttle one car to the second location for free. Each additional car still costs "
                                },
                                {
                                    "bbox": [
                                        64,
                                        424,
                                        489,
                                        570
                                    ],
                                    "type": "inline_equation",
                                    "content": "2, as do all cars moved in the other direction. In addition, Jack has limited parking space at each location. If more than 10 cars are kept overnight at a location (after any moving of cars), then an additional cost of"
                                },
                                {
                                    "bbox": [
                                        64,
                                        424,
                                        489,
                                        570
                                    ],
                                    "type": "text",
                                    "content": "4 must be incurred to use a second parking lot (independent of how many cars are kept there). These sorts of nonlinearities and arbitrary dynamics often occur in real problems and cannot easily be handled by optimization methods other than dynamic programming. To check your program, first replicate the results given for the original problem."
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        64,
                        591,
                        224,
                        607
                    ],
                    "type": "title",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                591,
                                224,
                                607
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        591,
                                        224,
                                        607
                                    ],
                                    "type": "text",
                                    "content": "4.4 Value Iteration"
                                }
                            ]
                        }
                    ],
                    "index": 5,
                    "level": 1
                },
                {
                    "bbox": [
                        64,
                        619,
                        489,
                        713
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                619,
                                489,
                                713
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        619,
                                        489,
                                        713
                                    ],
                                    "type": "text",
                                    "content": "One drawback to policy iteration is that each of its iterations involves policy evaluation, which may itself be a protracted iterative computation requiring multiple sweeps through the state set. If policy evaluation is done iteratively, then convergence exactly to "
                                },
                                {
                                    "bbox": [
                                        64,
                                        619,
                                        489,
                                        713
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        619,
                                        489,
                                        713
                                    ],
                                    "type": "text",
                                    "content": " occurs only in the limit. Must we wait for exact convergence, or can we stop short of that? The example in Figure 4.1 certainly suggests that it may be possible to truncate policy evaluation. In that example, policy evaluation iterations beyond the first three have no effect on the corresponding greedy policy."
                                }
                            ]
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        64,
                        714,
                        489,
                        740
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                714,
                                489,
                                740
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        714,
                                        489,
                                        740
                                    ],
                                    "type": "text",
                                    "content": "In fact, the policy evaluation step of policy iteration can be truncated in several ways without losing the convergence guarantees of policy iteration. One important special"
                                }
                            ]
                        }
                    ],
                    "index": 7
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                595,
                842
            ],
            "page_idx": 9
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        104,
                        140,
                        530,
                        181
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                140,
                                530,
                                181
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        140,
                                        530,
                                        181
                                    ],
                                    "type": "text",
                                    "content": "case is when policy evaluation is stopped after just one sweep (one update of each state). This algorithm is called value iteration. It can be written as a particularly simple update operation that combines the policy improvement and truncated policy evaluation steps:"
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        130,
                        188,
                        528,
                        243
                    ],
                    "type": "interline_equation",
                    "lines": [
                        {
                            "bbox": [
                                130,
                                188,
                                528,
                                243
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        130,
                                        188,
                                        528,
                                        243
                                    ],
                                    "type": "interline_equation",
                                    "content": "\\begin{array}{r c l}{{v_{k+1}(s)}}&{{\\doteq}}&{{\\max _{a}\\mathbb{E}[R_{t+1}+\\gamma v_{k}(S_{t+1})\\mid S_{t}=s,A_{t}=a]}}\\\\ {{}}&{{}}&{{}}\\\\ {{}}&{{=}}&{{\\max _{a}\\sum_{s^{\\prime},r}p(s^{\\prime},r\\mid s,a)\\Big[r+\\gamma v_{k}(s^{\\prime})\\Big],}}\\end{array} \\tag{4.10}",
                                    "image_path": "9291b7c9b46da7eb2518cf8b66c21fa5f91dd932cb838c7f4a5e79ec014881f5.jpg"
                                }
                            ]
                        }
                    ],
                    "index": 1
                },
                {
                    "bbox": [
                        104,
                        250,
                        529,
                        277
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                250,
                                529,
                                277
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        250,
                                        529,
                                        277
                                    ],
                                    "type": "text",
                                    "content": "for all "
                                },
                                {
                                    "bbox": [
                                        104,
                                        250,
                                        529,
                                        277
                                    ],
                                    "type": "inline_equation",
                                    "content": "s\\in \\mathcal{S}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        250,
                                        529,
                                        277
                                    ],
                                    "type": "text",
                                    "content": " . For arbitrary "
                                },
                                {
                                    "bbox": [
                                        104,
                                        250,
                                        529,
                                        277
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{0}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        250,
                                        529,
                                        277
                                    ],
                                    "type": "text",
                                    "content": " , the sequence "
                                },
                                {
                                    "bbox": [
                                        104,
                                        250,
                                        529,
                                        277
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\{v_{k}\\}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        250,
                                        529,
                                        277
                                    ],
                                    "type": "text",
                                    "content": " can be shown to converge to "
                                },
                                {
                                    "bbox": [
                                        104,
                                        250,
                                        529,
                                        277
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{*}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        250,
                                        529,
                                        277
                                    ],
                                    "type": "text",
                                    "content": " under the same conditions that guarantee the existence of "
                                },
                                {
                                    "bbox": [
                                        104,
                                        250,
                                        529,
                                        277
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{*}"
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        104,
                        278,
                        530,
                        384
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                278,
                                530,
                                384
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        278,
                                        530,
                                        384
                                    ],
                                    "type": "text",
                                    "content": "Another way of understanding value iteration is by reference to the Bellman optimality equation (4.1). Note that value iteration is obtained simply by turning the Bellman optimality equation into an update rule. Also note how the value iteration update is identical to the policy evaluation update (4.5) except that it requires the maximum to be taken over all actions. Another way of seeing this close relationship is to compare the backup diagrams for these algorithms on page 59 (policy evaluation) and on the left of Figure 3.4 (value iteration). These two are the natural backup operations for computing "
                                },
                                {
                                    "bbox": [
                                        104,
                                        278,
                                        530,
                                        384
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{\\pi}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        278,
                                        530,
                                        384
                                    ],
                                    "type": "text",
                                    "content": " and "
                                },
                                {
                                    "bbox": [
                                        104,
                                        278,
                                        530,
                                        384
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{*}"
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        104,
                        386,
                        530,
                        439
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                386,
                                530,
                                439
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        386,
                                        530,
                                        439
                                    ],
                                    "type": "text",
                                    "content": "Finally, let us consider how value iteration terminates. Like policy evaluation, value iteration formally requires an infinite number of iterations to converge exactly to "
                                },
                                {
                                    "bbox": [
                                        104,
                                        386,
                                        530,
                                        439
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{*}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        386,
                                        530,
                                        439
                                    ],
                                    "type": "text",
                                    "content": " . In practice, we stop once the value function changes by only a small amount in a sweep. The box below shows a complete algorithm with this kind of termination condition."
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        117,
                        454,
                        325,
                        468
                    ],
                    "type": "title",
                    "lines": [
                        {
                            "bbox": [
                                117,
                                454,
                                325,
                                468
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        117,
                                        454,
                                        325,
                                        468
                                    ],
                                    "type": "text",
                                    "content": "Value Iteration, for estimating "
                                },
                                {
                                    "bbox": [
                                        117,
                                        454,
                                        325,
                                        468
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi \\approx \\pi_{*}"
                                }
                            ]
                        }
                    ],
                    "index": 5,
                    "level": 1
                },
                {
                    "bbox": [
                        117,
                        475,
                        518,
                        503
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                117,
                                475,
                                518,
                                503
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        117,
                                        475,
                                        518,
                                        503
                                    ],
                                    "type": "text",
                                    "content": "Algorithm parameter: a small threshold "
                                },
                                {
                                    "bbox": [
                                        117,
                                        475,
                                        518,
                                        503
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\theta >0"
                                },
                                {
                                    "bbox": [
                                        117,
                                        475,
                                        518,
                                        503
                                    ],
                                    "type": "text",
                                    "content": " determining accuracy of estimation Initialize "
                                },
                                {
                                    "bbox": [
                                        117,
                                        475,
                                        518,
                                        503
                                    ],
                                    "type": "inline_equation",
                                    "content": "V(s)"
                                },
                                {
                                    "bbox": [
                                        117,
                                        475,
                                        518,
                                        503
                                    ],
                                    "type": "text",
                                    "content": " , for all "
                                },
                                {
                                    "bbox": [
                                        117,
                                        475,
                                        518,
                                        503
                                    ],
                                    "type": "inline_equation",
                                    "content": "s\\in \\mathcal{S}^{+}"
                                },
                                {
                                    "bbox": [
                                        117,
                                        475,
                                        518,
                                        503
                                    ],
                                    "type": "text",
                                    "content": " , arbitrarily except that "
                                },
                                {
                                    "bbox": [
                                        117,
                                        475,
                                        518,
                                        503
                                    ],
                                    "type": "inline_equation",
                                    "content": "V(t e r m i n a l) = 0"
                                }
                            ]
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        118,
                        511,
                        148,
                        522
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                118,
                                511,
                                148,
                                522
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        118,
                                        511,
                                        148,
                                        522
                                    ],
                                    "type": "text",
                                    "content": "Loop:"
                                }
                            ]
                        }
                    ],
                    "index": 7
                },
                {
                    "bbox": [
                        118,
                        524,
                        166,
                        536
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                118,
                                524,
                                166,
                                536
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        118,
                                        524,
                                        166,
                                        536
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\Delta \\leftarrow 0"
                                }
                            ]
                        }
                    ],
                    "index": 8
                },
                {
                    "bbox": [
                        118,
                        538,
                        230,
                        549
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                118,
                                538,
                                230,
                                549
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        118,
                                        538,
                                        230,
                                        549
                                    ],
                                    "type": "text",
                                    "content": "Loop for each "
                                },
                                {
                                    "bbox": [
                                        118,
                                        538,
                                        230,
                                        549
                                    ],
                                    "type": "inline_equation",
                                    "content": "s\\in \\mathcal{S}"
                                }
                            ]
                        }
                    ],
                    "index": 9
                },
                {
                    "bbox": [
                        147,
                        550,
                        361,
                        591
                    ],
                    "type": "interline_equation",
                    "lines": [
                        {
                            "bbox": [
                                147,
                                550,
                                361,
                                591
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        147,
                                        550,
                                        361,
                                        591
                                    ],
                                    "type": "interline_equation",
                                    "content": "\\begin{array}{r l} & {v\\leftarrow V(s)}\\\\ & {V(s)\\leftarrow \\max_{a}\\sum_{s^{\\prime},r}p(s^{\\prime},r|s,a)\\left[r + \\gamma V(s^{\\prime})\\right]}\\\\ & {\\Delta \\leftarrow \\max (\\Delta ,|v - V(s)|)} \\end{array}",
                                    "image_path": "910988e7e6c52a3828581719a241b8a1b38fd1f28f3bca8a55bf58c05aa844c9.jpg"
                                }
                            ]
                        }
                    ],
                    "index": 10
                },
                {
                    "bbox": [
                        118,
                        591,
                        176,
                        603
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                118,
                                591,
                                176,
                                603
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        118,
                                        591,
                                        176,
                                        603
                                    ],
                                    "type": "text",
                                    "content": "until "
                                },
                                {
                                    "bbox": [
                                        118,
                                        591,
                                        176,
                                        603
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\Delta < \\theta"
                                }
                            ]
                        }
                    ],
                    "index": 11
                },
                {
                    "bbox": [
                        118,
                        610,
                        355,
                        639
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                118,
                                610,
                                355,
                                639
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        118,
                                        610,
                                        355,
                                        639
                                    ],
                                    "type": "text",
                                    "content": "Output a deterministic policy, "
                                },
                                {
                                    "bbox": [
                                        118,
                                        610,
                                        355,
                                        639
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\pi \\approx \\pi_{*}"
                                },
                                {
                                    "bbox": [
                                        118,
                                        610,
                                        355,
                                        639
                                    ],
                                    "type": "text",
                                    "content": " , such that "
                                },
                                {
                                    "bbox": [
                                        118,
                                        610,
                                        355,
                                        639
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\begin{array}{r}{\\pi (s) = \\arg \\max_{a}\\sum_{s^{\\prime},r}p(s^{\\prime},r|s,a)\\left[r + \\gamma V(s^{\\prime})\\right]} \\end{array}"
                                }
                            ]
                        }
                    ],
                    "index": 12
                },
                {
                    "bbox": [
                        104,
                        660,
                        530,
                        740
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                660,
                                530,
                                740
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        660,
                                        530,
                                        740
                                    ],
                                    "type": "text",
                                    "content": "Value iteration effectively combines, in each of its sweeps, one sweep of policy evaluation and one sweep of policy improvement. Faster convergence is often achieved by interposing multiple policy evaluation sweeps between each policy improvement sweep. In general, the entire class of truncated policy iteration algorithms can be thought of as sequences of sweeps, some of which use policy evaluation updates and some of which use value iteration updates. Because the max operation in (4.10) is the only difference between"
                                }
                            ]
                        }
                    ],
                    "index": 13
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                595,
                842
            ],
            "page_idx": 10
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        64,
                        140,
                        489,
                        180
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                140,
                                489,
                                180
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        140,
                                        489,
                                        180
                                    ],
                                    "type": "text",
                                    "content": "these updates, this just means that the max operation is added to some sweeps of policy evaluation. All of these algorithms converge to an optimal policy for discounted finite MDPs."
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        64,
                        184,
                        490,
                        277
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                184,
                                490,
                                277
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        184,
                                        490,
                                        277
                                    ],
                                    "type": "text",
                                    "content": "Example 4.3: Gambler's Problem A gambler has the opportunity to make bets on the outcomes of a sequence of coin flips. If the coin comes up heads, he wins as many dollars as he has staked on that flip; if it is tails, he loses his stake. The game ends when the gambler wins by reaching his goal of \\(\\) 100\\(, or loses by running out of money. On each flip, the gambler must decide what portion of his capital to stake, in integer numbers of dollars. This problem can be formulated as an undiscounted, episodic, finite MDP. The state is the gambler's capital,\\)s\\in\\{1,2,\\ldots,99\\}\\(and the actions are stakes,\\)a\\in\\{0,1,\\ldots,\\min (s,100- s)\\}\\(. The reward is zero on all transitions except those on which the gambler reaches his goal, when it is\\)+1\\(. The state - value function then gives the probability of winning from each state. A policy is a mapping from levels of capital to stakes. The optimal policy maximizes the probability of reaching the goal. Let\\)p_{h}\\(denote the probability of the coin coming up heads. If\\)p_{h}\\(is known, then the entire problem is known and it can be solved, for instance, by value iteration. Figure 4.3 shows the change in the value function over successive sweeps of value iteration, and the final policy found, for the case of\\)p_{h}=0.4\\(. This policy is optimal, but not unique. In fact, there is a whole family of optimal policies, all corresponding to ties for the argmax action selection with respect to the optimal value function. Can you guess what the entire family looks like?"
                                }
                            ]
                        }
                    ],
                    "index": 1
                },
                {
                    "bbox": [
                        64,
                        277,
                        239,
                        595
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                277,
                                239,
                                595
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        239,
                                        595
                                    ],
                                    "type": "text",
                                    "content": "The reward is zero on all transitions except those on which the gambler reaches his goal, when it is "
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        239,
                                        595
                                    ],
                                    "type": "inline_equation",
                                    "content": "+1"
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        239,
                                        595
                                    ],
                                    "type": "text",
                                    "content": " The state- value function then gives the probability of winning from each state. A policy is a mapping from levels of capital to stakes. The optimal policy maximizes the probability of reaching the goal. Let "
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        239,
                                        595
                                    ],
                                    "type": "inline_equation",
                                    "content": "p_{h}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        239,
                                        595
                                    ],
                                    "type": "text",
                                    "content": " denote the probability of the coin coming up heads. If "
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        239,
                                        595
                                    ],
                                    "type": "inline_equation",
                                    "content": "p_{h}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        239,
                                        595
                                    ],
                                    "type": "text",
                                    "content": " is known, then the entire problem is known and it can be solved, for instance, by value iteration. Figure 4.3 shows the change in the value function over successive sweeps of value iteration, and the final policy found, for the case of "
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        239,
                                        595
                                    ],
                                    "type": "inline_equation",
                                    "content": "p_{h} = 0.4"
                                },
                                {
                                    "bbox": [
                                        64,
                                        277,
                                        239,
                                        595
                                    ],
                                    "type": "text",
                                    "content": " . This policy is optimal, but not unique. In fact, there is a whole family of optimal policies, all corresponding to ties for the argmax action selection with respect to the optimal value function. Can you guess what the entire family looks like?"
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "type": "image",
                    "bbox": [
                        251,
                        294,
                        485,
                        539
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                251,
                                294,
                                485,
                                539
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        251,
                                        294,
                                        485,
                                        539
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                251,
                                                294,
                                                485,
                                                539
                                            ],
                                            "type": "image",
                                            "image_path": "e4cfc1fd8d42b0faa0b136f924663c41b28b7ff31b3914c56f9506a0a8add773.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 3,
                            "type": "image_body"
                        },
                        {
                            "bbox": [
                                245,
                                550,
                                489,
                                600
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        245,
                                        550,
                                        489,
                                        600
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                245,
                                                550,
                                                489,
                                                600
                                            ],
                                            "type": "text",
                                            "content": "Figure 4.3: The solution to the gambler's problem for "
                                        },
                                        {
                                            "bbox": [
                                                245,
                                                550,
                                                489,
                                                600
                                            ],
                                            "type": "inline_equation",
                                            "content": "p_{h} = 0.4"
                                        },
                                        {
                                            "bbox": [
                                                245,
                                                550,
                                                489,
                                                600
                                            ],
                                            "type": "text",
                                            "content": " . The upper graph shows the value function found by successive sweeps of value iteration. The lower graph shows the final policy."
                                        }
                                    ]
                                }
                            ],
                            "index": 4,
                            "type": "image_caption"
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        64,
                        599,
                        489,
                        639
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                599,
                                489,
                                639
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        599,
                                        489,
                                        639
                                    ],
                                    "type": "text",
                                    "content": "Exercise 4.8 Why does the optimal policy for the gambler's problem have such a curious form? In particular, for capital of 50 it bets it all on one flip, but for capital of 51 it does not. Why is this a good policy?"
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        64,
                        643,
                        490,
                        709
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                643,
                                490,
                                709
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        643,
                                        490,
                                        709
                                    ],
                                    "type": "text",
                                    "content": "Exercise 4.9 (programming) Implement value iteration for the gambler's problem and solve it for "
                                },
                                {
                                    "bbox": [
                                        64,
                                        643,
                                        490,
                                        709
                                    ],
                                    "type": "inline_equation",
                                    "content": "p_{h} = 0.25"
                                },
                                {
                                    "bbox": [
                                        64,
                                        643,
                                        490,
                                        709
                                    ],
                                    "type": "text",
                                    "content": " and "
                                },
                                {
                                    "bbox": [
                                        64,
                                        643,
                                        490,
                                        709
                                    ],
                                    "type": "inline_equation",
                                    "content": "p_{h} = 0.55"
                                },
                                {
                                    "bbox": [
                                        64,
                                        643,
                                        490,
                                        709
                                    ],
                                    "type": "text",
                                    "content": " . In programming, you may find it convenient to introduce two dummy states corresponding to termination with capital of 0 and 100, giving them values of 0 and 1 respectively. Show your results graphically, as in Figure 4.3. Are your results stable as "
                                },
                                {
                                    "bbox": [
                                        64,
                                        643,
                                        490,
                                        709
                                    ],
                                    "type": "inline_equation",
                                    "content": "6\\rightarrow 0"
                                },
                                {
                                    "bbox": [
                                        64,
                                        643,
                                        490,
                                        709
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\boxed{ \\begin{array}{r l} \\end{array} }"
                                }
                            ]
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        64,
                        713,
                        490,
                        740
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                713,
                                490,
                                740
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        713,
                                        490,
                                        740
                                    ],
                                    "type": "text",
                                    "content": "Exercise 4.10 What is the analog of the value iteration update (4.10) for action values, "
                                },
                                {
                                    "bbox": [
                                        64,
                                        713,
                                        490,
                                        740
                                    ],
                                    "type": "inline_equation",
                                    "content": "q_{k + 1}(s,a)"
                                },
                                {
                                    "bbox": [
                                        64,
                                        713,
                                        490,
                                        740
                                    ],
                                    "type": "text",
                                    "content": "?"
                                }
                            ]
                        }
                    ],
                    "index": 7
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                595,
                842
            ],
            "page_idx": 11
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        105,
                        137,
                        445,
                        154
                    ],
                    "type": "title",
                    "lines": [
                        {
                            "bbox": [
                                105,
                                137,
                                445,
                                154
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        105,
                                        137,
                                        445,
                                        154
                                    ],
                                    "type": "text",
                                    "content": "4.5 Asynchronous Dynamic Programming"
                                }
                            ]
                        }
                    ],
                    "index": 0,
                    "level": 1
                },
                {
                    "bbox": [
                        104,
                        165,
                        530,
                        245
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                165,
                                530,
                                245
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        165,
                                        530,
                                        245
                                    ],
                                    "type": "text",
                                    "content": "A major drawback to the DP methods that we have discussed so far is that they involve operations over the entire state set of the MDP, that is, they require sweeps of the state set. If the state set is very large, then even a single sweep can be prohibitively expensive. For example, the game of backgammon has over "
                                },
                                {
                                    "bbox": [
                                        104,
                                        165,
                                        530,
                                        245
                                    ],
                                    "type": "inline_equation",
                                    "content": "10^{20}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        165,
                                        530,
                                        245
                                    ],
                                    "type": "text",
                                    "content": " states. Even if we could perform the value iteration update on a million states per second, it would take over a thousand years to complete a single sweep."
                                }
                            ]
                        }
                    ],
                    "index": 1
                },
                {
                    "bbox": [
                        104,
                        247,
                        530,
                        353
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                247,
                                530,
                                353
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        247,
                                        530,
                                        353
                                    ],
                                    "type": "text",
                                    "content": "Asynchronous DP algorithms are in- place iterative DP algorithms that are not organized in terms of systematic sweeps of the state set. These algorithms update the values of states in any order whatsoever, using whatever values of other states happen to be available. The values of some states may be updated several times before the values of others are updated once. To converge correctly, however, an asynchronous algorithm must continue to update the values of all the states: it can't ignore any state after some point in the computation. Asynchronous DP algorithms allow great flexibility in selecting states to update."
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        104,
                        355,
                        530,
                        474
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                355,
                                530,
                                474
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        355,
                                        530,
                                        474
                                    ],
                                    "type": "text",
                                    "content": "For example, one version of asynchronous value iteration updates the value, in place, of only one state, "
                                },
                                {
                                    "bbox": [
                                        104,
                                        355,
                                        530,
                                        474
                                    ],
                                    "type": "inline_equation",
                                    "content": "s_k"
                                },
                                {
                                    "bbox": [
                                        104,
                                        355,
                                        530,
                                        474
                                    ],
                                    "type": "text",
                                    "content": " , on each step, "
                                },
                                {
                                    "bbox": [
                                        104,
                                        355,
                                        530,
                                        474
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        104,
                                        355,
                                        530,
                                        474
                                    ],
                                    "type": "text",
                                    "content": " , using the value iteration update (4.10). If "
                                },
                                {
                                    "bbox": [
                                        104,
                                        355,
                                        530,
                                        474
                                    ],
                                    "type": "inline_equation",
                                    "content": "0\\leq \\gamma < 1"
                                },
                                {
                                    "bbox": [
                                        104,
                                        355,
                                        530,
                                        474
                                    ],
                                    "type": "text",
                                    "content": " asymptotic convergence to "
                                },
                                {
                                    "bbox": [
                                        104,
                                        355,
                                        530,
                                        474
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{*}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        355,
                                        530,
                                        474
                                    ],
                                    "type": "text",
                                    "content": " is guaranteed given only that all states occur in the sequence "
                                },
                                {
                                    "bbox": [
                                        104,
                                        355,
                                        530,
                                        474
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\{s_{k}\\}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        355,
                                        530,
                                        474
                                    ],
                                    "type": "text",
                                    "content": " an infinite number of times (the sequence could even be random).1 Similarly, it is possible to intermix policy evaluation and value iteration updates to produce a kind of asynchronous truncated policy iteration. Although the details of this and other more unusual DP algorithms are beyond the scope of this book, it is clear that a few different updates form building blocks that can be used flexibly in a wide variety of sweepless DP algorithms."
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        104,
                        474,
                        530,
                        593
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                474,
                                530,
                                593
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        474,
                                        530,
                                        593
                                    ],
                                    "type": "text",
                                    "content": "Of course, avoiding sweeps does not necessarily mean that we can get away with less computation. It just means that an algorithm does not need to get locked into any hopelessly long sweep before it can make progress improving a policy. We can try to take advantage of this flexibility by selecting the states to which we apply updates so as to improve the algorithm's rate of progress. We can try to order the updates to let value information propagate from state to state in an efficient way. Some states may not need their values updated as often as others. We might even try to skip updating some states entirely if they are not relevant to optimal behavior. Some ideas for doing this are discussed in Chapter 8."
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        104,
                        595,
                        530,
                        687
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                595,
                                530,
                                687
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        595,
                                        530,
                                        687
                                    ],
                                    "type": "text",
                                    "content": "Asynchronous algorithms also make it easier to intermix computation with real- time interaction. To solve a given MDP, we can run an iterative DP algorithm at the same time that an agent is actually experiencing the MDP. The agent's experience can be used to determine the states to which the DP algorithm applies its updates. At the same time, the latest value and policy information from the DP algorithm can guide the agent's decision making. For example, we can apply updates to states as the agent visits them. This makes it possible to focus the DP algorithm's updates onto parts of the state set"
                                }
                            ]
                        }
                    ],
                    "index": 5
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                595,
                842
            ],
            "page_idx": 12
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        64,
                        140,
                        489,
                        168
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                140,
                                489,
                                168
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        140,
                                        489,
                                        168
                                    ],
                                    "type": "text",
                                    "content": "that are most relevant to the agent. This kind of focusing is a repeated theme in reinforcement learning."
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        64,
                        212,
                        327,
                        229
                    ],
                    "type": "title",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                212,
                                327,
                                229
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        212,
                                        327,
                                        229
                                    ],
                                    "type": "text",
                                    "content": "4.6 Generalized Policy Iteration"
                                }
                            ]
                        }
                    ],
                    "index": 1,
                    "level": 1
                },
                {
                    "bbox": [
                        64,
                        245,
                        489,
                        391
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                245,
                                489,
                                391
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        245,
                                        489,
                                        391
                                    ],
                                    "type": "text",
                                    "content": "Policy iteration consists of two simultaneous, interacting processes, one making the value function consistent with the current policy (policy evaluation), and the other making the policy greedy with respect to the current value function (policy improvement). In policy iteration, these two processes alternate, each completing before the other begins, but this is not really necessary. In value iteration, for example, only a single iteration of policy evaluation is performed in between each policy improvement. In asynchronous DP methods, the evaluation and improvement processes are interleaved at an even finer grain. In some cases a single state is updated in one process before returning to the other. As long as both processes continue to update all states, the ultimate result is typically the same—convergence to the optimal value function and an optimal policy."
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        64,
                        393,
                        374,
                        578
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                393,
                                374,
                                578
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        393,
                                        374,
                                        578
                                    ],
                                    "type": "text",
                                    "content": "We use the term generalized policy iteration (GPI) to refer to the general idea of letting policy- evaluation and policy- improvement processes interact, independent of the granularity and other details of the two processes. Almost all reinforcement learning methods are well described as GPI. That is, all have identifiable policies and value functions, with the policy always being improved with respect to the value function and the value function always being driven toward the value function for the policy, as suggested by the diagram to the right. If both the evaluation process and the improvement process stabilize, that is, no longer produce changes, then the value function and policy must be optimal. The value function stabilizes only when it is consistent with the current policy, and the policy stabilizes only when it is greedy with respect to the current value function. Thus, both processes stabilize only when a policy has been found that is greedy with respect to its own evaluation function. This implies that the Bellman optimality equation (4.1) holds, and thus that the policy and the value function are optimal."
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "type": "image",
                    "bbox": [
                        385,
                        412,
                        480,
                        569
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                385,
                                412,
                                480,
                                569
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        385,
                                        412,
                                        480,
                                        569
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                385,
                                                412,
                                                480,
                                                569
                                            ],
                                            "type": "image",
                                            "image_path": "1da5f7866aaf1dbe8aee990e2c88c66f6235e97ddaccd01d365b8aa8780e8305.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 4,
                            "type": "image_body"
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        64,
                        579,
                        489,
                        618
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                579,
                                489,
                                618
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        579,
                                        489,
                                        618
                                    ],
                                    "type": "text",
                                    "content": "Thus, both processes stabilize only when a policy has been found that is greedy with respect to its own evaluation function. This implies that the Bellman optimality equation (4.1) holds, and thus that the policy and the value function are optimal."
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        64,
                        620,
                        489,
                        713
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                620,
                                489,
                                713
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        620,
                                        489,
                                        713
                                    ],
                                    "type": "text",
                                    "content": "The evaluation and improvement processes in GPI can be viewed as both competing and cooperating. They compete in the sense that they pull in opposing directions. Making the policy greedy with respect to the value function typically makes the value function incorrect for the changed policy, and making the value function consistent with the policy typically causes that policy no longer to be greedy. In the long run, however, these two processes interact to find a single joint solution: the optimal value function and an optimal policy."
                                }
                            ]
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        64,
                        714,
                        489,
                        740
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                714,
                                489,
                                740
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        714,
                                        489,
                                        740
                                    ],
                                    "type": "text",
                                    "content": "One might also think of the interaction between the evaluation and improvement processes in GPI in terms of two constraints or goals—for example, as two lines in"
                                }
                            ]
                        }
                    ],
                    "index": 7
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                595,
                842
            ],
            "page_idx": 13
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        104,
                        141,
                        350,
                        260
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                141,
                                350,
                                260
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        141,
                                        350,
                                        260
                                    ],
                                    "type": "text",
                                    "content": "a two- dimensional space as suggested by the diagram to the right. Although the real geometry is much more complicated than this, the diagram suggests what happens in the real case. Each process drives the value function or policy toward one of the lines representing a solution to one of the two goals. The goals interact because the two lines are not orthogonal. Driving directly toward one goal causes some movement away from the other goal."
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "type": "image",
                    "bbox": [
                        357,
                        142,
                        529,
                        239
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                357,
                                142,
                                529,
                                239
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        357,
                                        142,
                                        529,
                                        239
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                357,
                                                142,
                                                529,
                                                239
                                            ],
                                            "type": "image",
                                            "image_path": "f5bc3bd063bd22e0c5215076c8b70c18afd83b50fdb7b943b7e04332b10b3a73.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 1,
                            "type": "image_body"
                        }
                    ],
                    "index": 1
                },
                {
                    "bbox": [
                        104,
                        261,
                        530,
                        339
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                261,
                                530,
                                339
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        261,
                                        530,
                                        339
                                    ],
                                    "type": "text",
                                    "content": "Inevitably, however, the joint process is brought closer to the overall goal of optimality. The arrows in this diagram correspond to the behavior of policy iteration in that each takes the system all the way to achieving one of the two goals completely. In GPI one could also take smaller, incomplete steps toward each goal. In either case, the two processes together achieve the overall goal of optimality even though neither is attempting to achieve it directly."
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        104,
                        362,
                        431,
                        381
                    ],
                    "type": "title",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                362,
                                431,
                                381
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        362,
                                        431,
                                        381
                                    ],
                                    "type": "text",
                                    "content": "4.7 Efficiency of Dynamic Programming"
                                }
                            ]
                        }
                    ],
                    "index": 3,
                    "level": 1
                },
                {
                    "bbox": [
                        104,
                        393,
                        530,
                        578
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                393,
                                530,
                                578
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        393,
                                        530,
                                        578
                                    ],
                                    "type": "text",
                                    "content": "DP may not be practical for very large problems, but compared with other methods for solving MDPs, DP methods are actually quite efficient. If we ignore a few technical details, then, in the worst case, the time that DP methods take to find an optimal policy is polynomial in the number of states and actions. If "
                                },
                                {
                                    "bbox": [
                                        104,
                                        393,
                                        530,
                                        578
                                    ],
                                    "type": "inline_equation",
                                    "content": "n"
                                },
                                {
                                    "bbox": [
                                        104,
                                        393,
                                        530,
                                        578
                                    ],
                                    "type": "text",
                                    "content": " and "
                                },
                                {
                                    "bbox": [
                                        104,
                                        393,
                                        530,
                                        578
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        104,
                                        393,
                                        530,
                                        578
                                    ],
                                    "type": "text",
                                    "content": " denote the number of states and actions, this means that a DP method takes a number of computational operations that is less than some polynomial function of "
                                },
                                {
                                    "bbox": [
                                        104,
                                        393,
                                        530,
                                        578
                                    ],
                                    "type": "inline_equation",
                                    "content": "n"
                                },
                                {
                                    "bbox": [
                                        104,
                                        393,
                                        530,
                                        578
                                    ],
                                    "type": "text",
                                    "content": " and "
                                },
                                {
                                    "bbox": [
                                        104,
                                        393,
                                        530,
                                        578
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        104,
                                        393,
                                        530,
                                        578
                                    ],
                                    "type": "text",
                                    "content": ". A DP method is guaranteed to find an optimal policy in polynomial time even though the total number of (deterministic) policies is "
                                },
                                {
                                    "bbox": [
                                        104,
                                        393,
                                        530,
                                        578
                                    ],
                                    "type": "inline_equation",
                                    "content": "k^n"
                                },
                                {
                                    "bbox": [
                                        104,
                                        393,
                                        530,
                                        578
                                    ],
                                    "type": "text",
                                    "content": ". In this sense, DP is exponentially faster than any direct search in policy space could be, because direct search would have to exhaustively examine each policy to provide the same guarantee. Linear programming methods can also be used to solve MDPs, and in some cases their worst- case convergence guarantees are better than those of DP methods. But linear programming methods become impractical at a much smaller number of states than do DP methods (by a factor of about 100). For the largest problems, only DP methods are feasible."
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        104,
                        580,
                        530,
                        660
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                580,
                                530,
                                660
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        580,
                                        530,
                                        660
                                    ],
                                    "type": "text",
                                    "content": "DP is sometimes thought to be of limited applicability because of the curse of dimensionality, the fact that the number of states often grows exponentially with the number of state variables. Large state sets do create difficulties, but these are inherent difficulties of the problem, not of DP as a solution method. In fact, DP is comparatively better suited to handling large state spaces than competing methods such as direct search and linear programming."
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        104,
                        661,
                        529,
                        726
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                661,
                                529,
                                726
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        661,
                                        529,
                                        726
                                    ],
                                    "type": "text",
                                    "content": "In practice, DP methods can be used with today's computers to solve MDPs with millions of states. Both policy iteration and value iteration are widely used, and it is not clear which, if either, is better in general. In practice, these methods usually converge much faster than their theoretical worst- case run times, particularly if they are started with good initial value functions or policies."
                                }
                            ]
                        }
                    ],
                    "index": 6
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                595,
                842
            ],
            "page_idx": 14
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        64,
                        141,
                        489,
                        233
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                141,
                                489,
                                233
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        141,
                                        489,
                                        233
                                    ],
                                    "type": "text",
                                    "content": "On problems with large state spaces, asynchronous DP methods are often preferred. To complete even one sweep of a synchronous method requires computation and memory for every state. For some problems, even this much memory and computation is impractical, yet the problem is still potentially solvable because relatively few states occur along optimal solution trajectories. Asynchronous methods and other variations of GPI can be applied in such cases and may find good or optimal policies much faster than synchronous methods can."
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        64,
                        256,
                        181,
                        274
                    ],
                    "type": "title",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                256,
                                181,
                                274
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        256,
                                        181,
                                        274
                                    ],
                                    "type": "text",
                                    "content": "4.8 Summary"
                                }
                            ]
                        }
                    ],
                    "index": 1,
                    "level": 1
                },
                {
                    "bbox": [
                        64,
                        286,
                        490,
                        391
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                286,
                                490,
                                391
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        286,
                                        490,
                                        391
                                    ],
                                    "type": "text",
                                    "content": "In this chapter we have become familiar with the basic ideas and algorithms of dynamic programming as they relate to solving finite MDPs. Policy evaluation refers to the (typically) iterative computation of the value function for a given policy. Policy improvement refers to the computation of an improved policy given the value function for that policy. Putting these two computations together, we obtain policy iteration and value iteration, the two most popular DP methods. Either of these can be used to reliably compute optimal policies and value functions for finite MDPs given complete knowledge of the MDP."
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        64,
                        394,
                        490,
                        511
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                394,
                                490,
                                511
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        394,
                                        490,
                                        511
                                    ],
                                    "type": "text",
                                    "content": "Classical DP methods operate in sweeps through the state set, performing an expected update operation on each state. Each such operation updates the value of one state based on the values of all possible successor states and their probabilities of occurring. Expected updates are closely related to Bellman equations: they are little more than these equations turned into assignment statements. When the updates no longer result in any changes in value, convergence has occurred to values that satisfy the corresponding Bellman equation. Just as there are four primary value functions "
                                },
                                {
                                    "bbox": [
                                        64,
                                        394,
                                        490,
                                        511
                                    ],
                                    "type": "inline_equation",
                                    "content": "(v_{\\pi}, v_{*}, q_{\\pi}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        394,
                                        490,
                                        511
                                    ],
                                    "type": "text",
                                    "content": ", and "
                                },
                                {
                                    "bbox": [
                                        64,
                                        394,
                                        490,
                                        511
                                    ],
                                    "type": "inline_equation",
                                    "content": "q_{*}"
                                },
                                {
                                    "bbox": [
                                        64,
                                        394,
                                        490,
                                        511
                                    ],
                                    "type": "text",
                                    "content": "), there are four corresponding Bellman equations and four corresponding expected updates. An intuitive view of the operation of DP updates is given by their backup diagrams."
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        64,
                        513,
                        490,
                        686
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                513,
                                490,
                                686
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        513,
                                        490,
                                        686
                                    ],
                                    "type": "text",
                                    "content": "Insight into DP methods and, in fact, into almost all reinforcement learning methods, can be gained by viewing them as generalized policy iteration (GPI). GPI is the general idea of two interacting processes revolving around an approximate policy and an approximate value function. One process takes the policy as given and performs some form of policy evaluation, changing the value function to be more like the true value function for the policy. The other process takes the value function as given and performs some form of policy improvement, changing the policy to make it better, assuming that the value function is its value function. Although each process changes the basis for the other, overall they work together to find a joint solution: a policy and value function that are unchanged by either process and, consequently, are optimal. In some cases, GPI can be proved to converge, most notably for the classical DP methods that we have presented in this chapter. In other cases convergence has not been proved, but still the idea of GPI improves our understanding of the methods."
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        64,
                        687,
                        490,
                        740
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                64,
                                687,
                                490,
                                740
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        64,
                                        687,
                                        490,
                                        740
                                    ],
                                    "type": "text",
                                    "content": "It is not necessary to perform DP methods in complete sweeps through the state set. Asynchronous DP methods are in- place iterative methods that update states in an arbitrary order, perhaps stochastically determined and using out- of- date information. Many of these methods can be viewed as fine- grained forms of GPI."
                                }
                            ]
                        }
                    ],
                    "index": 5
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                595,
                842
            ],
            "page_idx": 15
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        104,
                        141,
                        530,
                        260
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                141,
                                530,
                                260
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        141,
                                        530,
                                        260
                                    ],
                                    "type": "text",
                                    "content": "Finally, we note one last special property of DP methods. All of them update estimates of the values of states based on estimates of the values of successor states. That is, they update estimates on the basis of other estimates. We call this general idea bootstrapping. Many reinforcement learning methods perform bootstrapping, even those that do not require, as DP requires, a complete and accurate model of the environment. In the next chapter we explore reinforcement learning methods that do not require a model and do not bootstrap. In the chapter after that we explore methods that do not require a model but do bootstrap. These key features and properties are separable, yet can be mixed in interesting combinations."
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        104,
                        294,
                        414,
                        313
                    ],
                    "type": "title",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                294,
                                414,
                                313
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        294,
                                        414,
                                        313
                                    ],
                                    "type": "text",
                                    "content": "Bibliographical and Historical Remarks"
                                }
                            ]
                        }
                    ],
                    "index": 1,
                    "level": 1
                },
                {
                    "bbox": [
                        104,
                        324,
                        530,
                        404
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                324,
                                530,
                                404
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        324,
                                        530,
                                        404
                                    ],
                                    "type": "text",
                                    "content": "The term \"dynamic programming\" is due to Bellman (1957a), who showed how these methods could be applied to a wide range of problems. Extensive treatments of DP can be found in many texts, including Bertsekas (2005, 2012), Bertsekas and Tsitsiklis (1996), Dreyfus and Law (1977), Ross (1983), White (1969), and Whittle (1982, 1983). Our interest in DP is restricted to its use in solving MDPs, but DP also applies to other types of problems. Kumar and Kanal (1988) provide a more general look at DP."
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        104,
                        405,
                        531,
                        576
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                405,
                                531,
                                576
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        405,
                                        531,
                                        576
                                    ],
                                    "type": "text",
                                    "content": "To the best of our knowledge, the first connection between DP and reinforcement learning was made by Minsky (1961) in commenting on Samuel's checkers player. In a footnote, Minsky mentioned that it is possible to apply DP to problems in which Samuel's backing- up process can be handled in closed analytic form. This remark may have misled artificial intelligence researchers into believing that DP was restricted to analytically tractable problems and therefore largely irrelevant to artificial intelligence. Andreae (1969) mentioned DP in the context of reinforcement learning. Werbos (1977) suggested an approach to approximating DP called \"heuristic dynamic programming\" that emphasizes gradient- descent methods for continuous- state problems (Werbos, 1982, 1987, 1988, 1989, 1992). These methods are closely related to the reinforcement learning algorithms that we discuss in this book. Watkins (1989) was explicit in connecting reinforcement learning to DP, characterizing a class of reinforcement learning methods as \"incremental dynamic programming.\""
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        105,
                        590,
                        530,
                        708
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                105,
                                590,
                                530,
                                708
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        105,
                                        590,
                                        530,
                                        708
                                    ],
                                    "type": "text",
                                    "content": "4.1- 4 These sections describe well- established DP algorithms that are covered in any of the general DP references cited above. The policy improvement theorem and the policy iteration algorithm are due to Bellman (1957a) and Howard (1960). Our presentation was influenced by the local view of policy improvement taken by Watkins (1989). Our discussion of value iteration as a form of truncated policy iteration is based on the approach of Puterman and Shin (1978), who presented a class of algorithms called modified policy iteration, which includes policy iteration and value iteration as special cases. An analysis showing how value iteration can be made to find an optimal policy in finite time is given by Bertsekas (1987)."
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        143,
                        714,
                        529,
                        740
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                143,
                                714,
                                529,
                                740
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        143,
                                        714,
                                        529,
                                        740
                                    ],
                                    "type": "text",
                                    "content": "Iterative policy evaluation is an example of a classical successive approximation algorithm for solving a system of linear equations. The version of the algorithm"
                                }
                            ]
                        }
                    ],
                    "index": 5
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                595,
                842
            ],
            "page_idx": 16
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        104,
                        141,
                        490,
                        272
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                141,
                                490,
                                272
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        141,
                                        490,
                                        272
                                    ],
                                    "type": "text",
                                    "content": "that uses two arrays, one holding the old values while the other is updated, is often called a Jacobi- style algorithm, after Jacobi's classical use of this method. It is also sometimes called a synchronous algorithm because the effect is as if all the values are updated at the same time. The second array is needed to simulate this parallel computation sequentially. The in- place version of the algorithm is often called a Gauss- Seidel- style algorithm after the classical Gauss- Seidel algorithm for solving systems of linear equations. In addition to iterative policy evaluation, other DP algorithms can be implemented in these different versions. Bertsekas and Tsitsiklis (1989) provide excellent coverage of these variations and their performance differences."
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        65,
                        286,
                        490,
                        405
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                65,
                                286,
                                490,
                                405
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        65,
                                        286,
                                        490,
                                        405
                                    ],
                                    "type": "text",
                                    "content": "4.5 Asynchronous DP algorithms are due to Bertsekas (1982, 1983), who also called them distributed DP algorithms. The original motivation for asynchronous DP was its implementation on a multiprocessor system with communication delays between processors and no global synchronizing clock. These algorithms are extensively discussed by Bertsekas and Tsitsiklis (1989). Jacobi- style and Gauss- Seidel- style DP algorithms are special cases of the asynchronous version. Williams and Baird (1990) presented DP algorithms that are asynchronous at a finer grain than the ones we have discussed: the update operations themselves are broken into steps that can be performed asynchronously."
                                }
                            ]
                        }
                    ],
                    "index": 1
                },
                {
                    "bbox": [
                        65,
                        417,
                        490,
                        457
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                65,
                                417,
                                490,
                                457
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        65,
                                        417,
                                        490,
                                        457
                                    ],
                                    "type": "text",
                                    "content": "4.7 This section, written with the help of Michael Littman, is based on Littman, Dean, and Kaelbling (1995). The phrase \"curse of dimensionality\" is due to Bellman (1957a)."
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        104,
                        462,
                        489,
                        488
                    ],
                    "type": "text",
                    "lines": [
                        {
                            "bbox": [
                                104,
                                462,
                                489,
                                488
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        462,
                                        489,
                                        488
                                    ],
                                    "type": "text",
                                    "content": "Foundational work on the linear programming approach to reinforcement learning was done by Daniela de Farias (de Farias, 2002; de Farias and Van Roy, 2003)."
                                }
                            ]
                        }
                    ],
                    "index": 3
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                595,
                842
            ],
            "page_idx": 17
        }
    ],
    "_backend": "vlm",
    "_version_name": "2.0.6"
}